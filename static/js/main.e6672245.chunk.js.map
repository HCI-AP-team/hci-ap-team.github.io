{"version":3,"sources":["pages/Memberpage.tsx","components/LanguageChoose.tsx","pages/Homepage.tsx","pages/international/componens/2D.tsx","pages/international/componens/DetailCard.tsx","pages/international/componens/3D.jsx","pages/international/componens/SwitchV.tsx","pages/international/pages/International.tsx","pages/China/components/DisplayDetail.tsx","pages/China/components/CreateChinaMap.tsx","pages/China/components/Label.tsx","pages/China/pages/China.tsx","pages/province/components/Histogram.tsx","pages/province/components/SelectBox.tsx","pages/province/pages/Province.tsx","api/baseURL.ts","api/requestNews.ts","pages/News/Jumppage.tsx","pages/News/Journalism.tsx","components/DirectionButton.tsx","components/ErrorBound.tsx","components/Loading.tsx","api/requestAreaData.ts","api/requestWorld2DData.ts","api/requestWorld3DData.ts","api/requestWorld3DMapData.ts","api/requestChinaMapData.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","root","width","height","title","fontSize","fontWeight","textAlign","root1","minWidth","maxWidth","media","cards","display","justifyContent","margin","Memberpage","props","language","classes","card","img","name","enName","des","enDes","link","map","item","Card","className","key","CardActionArea","CardMedia","image","process","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","href","LanguageChoose","setLanguage","showHint","setLocal","useCallback","data","localStorage","setItem","style","opacity","ButtonGroup","onClick","flexDirection","alignItems","backgroundColor","load","hint","transition","marginBottom","Homepage","displayText","useState","str","setStr","setShowHint","useEffect","i","disStr","substr","length","requestAnimationFrame","CircularProgress","thickness","mapBg","position","World","React","areaData","world2D","setData","filldata","setfillData","popupInfo","setPopupInfo","worldData","geodata","ncovData","ncovDataObj","forEach","countryName","countryEnglishName","currentConfirmedCount","confirmedCount","suspectedCount","curedCount","deadCount","geoObj","features","feature","properties","ncov","joinData","results","pointdata","center","pitch","zoom","top","left","right","bottom","lnglat","options","autoFit","source","scale","values","type","shape","parser","coordinates","active","option","field","animate","enable","handler","args","lngLat","useStyle","padding","overflow","DetailCard","countryData","Object","keys","el","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getTime","theme","globe","cursor","current","fontFamily","marginLeft","marginTop","Earth","setCountryData","tsv2json","angles","v0","r0","q0","land","countries","countryList","autorotate","now","diff","rotation","currentCountry","d3","canvas","context","node","getContext","water","projection","precision","graticule","path","lastTime","render","fillStyle","fillRect","fill","stroke","find","value","parseInt","id","confirm","f","provinceEnglishName","red","obj","beginPath","strokeStyle","rotate","elapsed","degPerSec","loadData","cb","a","polygonContains","polygon","point","x1","y1","n","p","x","y","x0","y0","inside","world","cList","topojson","objects","document","documentElement","clientWidth","clientHeight","attr","Math","min","translate","call","on","versor","cartesian","invert","this","stop","v1","q1","multiply","delta","r1","delay","restart","c","event","pos","geometry","c1","c2","getCountry","country","temp","filter","e","enter","text","undefined","SwitchV","display3D","setDisplay3D","FormGroup","FormControlLabel","control","IOSSwitch","checked","onChange","label","withStyles","createStyles","spacing","switchBase","transform","palette","common","white","border","thumb","track","borderRadius","grey","transitions","create","focusVisible","Switch","focusVisibleClassName","disableRipple","switchV","zIndex","International","ScrollReveal","reveal","duration","distance","reset","z","DisplayDetail","chinaData","ChineseLabels","EnglishLabels","provinceName","currentChoose","setTemp","provinceShortName","index","CreateChinaMap","handleChange","setCurrentChoose","chinaMapData","createChinaMap","raphael","dimension","省份","province","paths","respondValue","getColor","tempPathVal","cmd","val","method","param","join","tempPath","click","setTimeout","mouseover","mouseout","box","getBBox","offset","remove","useLabelStyle","marginRight","Label","labels","detail","h1","China","setChecked","prev","Slide","direction","in","mountOnEnter","unmountOnExit","Paper","elevation","chart","Histogram","displayLabel","sort","b","Chart","container","max","alias","axis","tickLine","coordinate","transpose","interval","interaction","destroy","formControl","SelectBox","setDisplayLabel","open","setOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","target","MenuItem","chooseInput","Province","baseURL","getData","fetch","then","json","newsData","paddingTop","expand","shortest","expandOpen","avatar","menuButton","flexGrow","Journalism","cityData","setCityData","SetLoad","requestNews","news","fetchData","AppBar","Toolbar","IconButton","edge","aria-label","CardHeader","Avatar","subheader","infoSource","summary","list","setList","setId","handleClickOpen","List","ListItem","ListItemAvatar","ListItemText","secondary","primary","Dialog","aria-labelledby","aria-describedby","Jumppage","grouped","DirectionButton","worldF","setWorldF","chinaF","setChinaF","provinceF","setProvinceF","cityF","setCityF","newsF","setNewsF","setPosition","scrollPosition","setScrollPosition","window","addEventListener","scrollY","innerHeight","ToggleButtonGroup","exclusive","Tooltip","enterDelay","placement","ToggleButton","scrollTo","behavior","Badge","invisible","badgeContent","ErrorBound","state","hasError","error","info","console","log","children","Component","Loading","City","lazy","gitBut","backdrop","drawer","bdButton","pls","getItem","App","Boolean","setDisplayText","setAreaData","setChinaData","setWorld2D","setNewsData","setWorldData","setTsv2json","setChinaMapData","requestAreaData","tempChinaData","requestWorld2DData","requestWorld3DData","requestWorld3DMapData","requestChinaMapData","data-color-scheme","data-size","data-show-count","fallback","Backdrop","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"2WASMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,QACPC,OAAQ,SAEVC,MAAO,CACLC,SAAU,OACVC,WAAY,OACZC,UAAW,UAEbC,MAAO,CACLC,SAAU,IACVC,SAAU,KAEZC,MAAO,CACLR,OAAQ,KAEVS,MAAO,CACLC,QAAS,OACTX,MAAO,OACPY,eAAgB,eAChBC,OAAQ,eA8FGC,EA1FI,SAACC,GAAgB,IAC1BC,EAAaD,EAAbC,SACFC,EAAUpB,IA2CVqB,EA1CuB,CAC3B,CACEC,IAAI,WACJC,KAAM,qBACNC,OAAQ,eACRC,IAAK,uCACLC,MAAO,mBACPC,KAAM,4BAER,CACEL,IAAI,UACJC,KAAM,eACNC,OAAQ,YACRC,IAAK,iCACLC,MAAO,mBACPC,KAAM,iCAER,CACEL,IAAI,WACJC,KAAM,qBACNC,OAAQ,aACRC,IAAK,iCACLC,MAAO,oBACPC,KAAM,iCAER,CACEL,IAAI,WACJC,KAAM,qBACNC,OAAQ,cACRC,IAAK,iCACLC,MAAO,qBACPC,KAAM,kCAER,CACEL,IAAI,WACJC,KAAM,qBACNC,OAAQ,gBACRC,IAAK,iCACLC,MAAO,qBACPC,KAAM,mCAG6BC,KAAI,SAACC,GAAD,OACzC,kBAACC,EAAA,EAAD,CAAMC,UAAWX,EAAQX,MAAOuB,IAAKH,EAAKN,MACxC,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEH,UAAWX,EAAQR,MACnBuB,MAAOC,GAAyBP,EAAKP,IACrCjB,MAAM,0BAER,kBAACgC,EAAA,EAAD,KACGlB,EACC,oCACE,kBAACmB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CZ,EAAKN,MAER,kBAACe,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KACzDZ,EAAKJ,MAIV,oCACE,kBAACa,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CZ,EAAKL,QAER,kBAACc,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KACzDZ,EAAKH,UAOhB,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQL,QAAQ,YAAYE,MAAM,WAC7C,uBAAGI,KAAMjB,EAAKF,MAAOR,EAAW,qBAAa,mBAIrD,OACE,yBAAKY,UAAWX,EAAQlB,MACtB,uBAAG6B,UAAWX,EAAQf,OAAQc,EAAW,mGAAqB,gDAC9D,yBAAKY,UAAWX,EAAQP,OAAQQ,K,kBCjGvB0B,MAnBf,SAAwB7B,GAAY,IACxBC,EAAkCD,EAAlCC,SAAS6B,EAAyB9B,EAAzB8B,YAAYC,EAAa/B,EAAb+B,SAEvBC,EAAWC,uBAAY,SAACC,GAC1BJ,EAAYI,GACZ,IAAMjC,EAAWiC,EAAO,IAAM,IAC9BC,aAAaC,QAAQ,WAAYnC,KAClC,IAEH,OACA,yBAAKoC,MAAO,CAAEC,QAASP,EAAW,EAAI,IAClC,kBAACQ,EAAA,EAAD,CAAaf,MAAM,WACf,kBAACE,EAAA,EAAD,CAAQJ,QAASrB,EAAS,YAAY,WAAYuC,QAAS,kBAAIR,GAAS,KAAxE,gBACA,kBAACN,EAAA,EAAD,CAAQJ,QAAUrB,EAAqB,WAAZ,YAAwBuC,QAAS,kBAAIR,GAAS,KAAzE,cCXNlD,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,QACPC,OAAQ,QACRU,QAAS,OACT6C,cAAe,SACf5C,eAAgB,SAChB6C,WAAY,SACZC,gBAAiB,QACjB,MAAO,CACHvD,SAAU,OACVoC,MAAO,QACPlC,UAAW,SACXL,MAAO,SAGf2D,KAAM,CACF1D,OAAQ,OACRD,MAAO,OACPa,OAAQ,YACR0B,MAAO,QACP5B,QAAS,OACT6C,cAAe,SACfC,WAAY,SACZ7C,eAAgB,gBAEpBgD,KAAM,CACFvD,UAAW,SACXkC,MAAO,QACPsB,WAAY,gBACZC,aAAc,SA2CPC,MAxCf,SAAkBhD,GAAa,IACnBiD,EAAuCjD,EAAvCiD,YAAahD,EAA0BD,EAA1BC,SAAU6B,EAAgB9B,EAAhB8B,YADL,EAGJoB,mBAAS,IAHL,mBAGnBC,EAHmB,KAGdC,EAHc,OAIMF,oBAAS,GAJf,mBAInBnB,EAJmB,KAITsB,EAJS,KAKpBnD,EAAUpB,IAgBhB,OAfAwE,qBAAU,WACN,IAAIC,EAAI,EAUJN,GATS,SAATO,IACAJ,EAPc,kNAOOK,OAAO,EAAGF,MAC3BA,IARU,kNAQUG,OAAS,EAC7BC,sBAAsBH,GAGtBH,GAAY,GAIhBG,KACL,CAACP,IACJK,qBAAU,cAAW,CAACrD,IAElB,yBAAKY,UAAWX,EAAQlB,MAEhBiE,EACI,2BAAIhD,EAAWkD,EAAM,qFAErB,yBAAKtC,UAAWX,EAAQ0C,MACpB,kBAACgB,EAAA,EAAD,CAAkBjC,KAAM,GAAIkC,UAAW,IACvC,sFACA,kEAGZ,yBAAKhD,UAAWX,EAAQ2C,KAAMR,MAAO,CAAEC,QAASP,EAAW,EAAI,IAAM9B,EAAW,uCAAW,sBAA3F,gBACA,yBAAKY,UAAWX,EAAQ2C,KAAMR,MAAO,CAAEC,QAASP,EAAW,EAAI,IAAM9B,EAAW,+DAAe,+CAA/F,gBACA,kBAAC,EAAD,CAAgB6B,YAAaA,EAAa7B,SAAUA,EAAU8B,SAAUA,M,kBC7D9EjD,EAAYC,YAAW,CAC3BC,KAAM,CACJE,OAAQ,QACRD,MAAO,QACPW,QAAS,OACT6C,cAAe,SACf5C,eAAgB,SAChB6C,WAAY,UAGdoB,MAAO,CACL5E,OAAQ,OACRD,MAAO,OACP8E,SAAU,WACVpB,gBAAiB,aA0DrB,IA2KeqB,EA3KDC,QAAW,SAAajE,GACpC,IAAME,EAAUpB,IACRmB,EAAgCD,EAAhCC,SAAUiE,EAAsBlE,EAAtBkE,SAAUC,EAAYnE,EAAZmE,QAFoB,EAGxBF,aAHwB,mBAGzC/B,EAHyC,KAGnCkC,EAHmC,OAIhBH,aAJgB,mBAIzCI,EAJyC,KAI/BC,EAJ+B,OAKdL,aALc,mBAKzCM,EALyC,KAK9BC,EAL8B,KA4ClD,OAnCEP,aAAgB,WAahB,GAAIC,GAAYC,EAAS,CACvB,IAKMM,EAnFV,SAAkBC,EAAcC,GAC9B,IAAMC,EAAmB,GACzBD,EAASE,SAAQ,SAAClE,GAAe,IAE7BmE,EAOEnE,EAPFmE,YACAC,EAMEpE,EANFoE,mBACAC,EAKErE,EALFqE,sBACAC,EAIEtE,EAJFsE,eACAC,EAGEvE,EAHFuE,eACAC,EAEExE,EAFFwE,WACAC,EACEzE,EADFyE,UAEkB,iBAAhBN,EACGF,EAAYE,IAWfF,EAAYE,GAAaE,uBAAyBA,EAClDJ,EAAYE,GAAaG,gBAAkBA,EAC3CL,EAAYE,GAAaI,gBAAkBA,EAC3CN,EAAYE,GAAaK,YAAcA,EACvCP,EAAYE,GAAaM,WAAaA,GAdtCR,EAAYE,GAAe,CACzBA,YAAa,EACbC,qBACAC,sBAAuB,EACvBC,eAAgB,EAChBC,eAAgB,EAChBC,WAAY,EACZC,UAAW,GAUfR,EAAYE,GAAe,CACzBA,cACAC,qBACAC,wBACAC,iBACAC,iBACAC,aACAC,gBAIN,IAAMC,EAAc,GAUpB,OATAX,EAAQY,SAAST,SAAQ,SAACU,GAAkB,IAClClF,EAASkF,EAAQC,WAAjBnF,KACRgF,EAAOhF,GAAQkF,EAAQC,WACvB,IAAMC,EAAOb,EAAYvE,IAAS,GAClCkF,EAAQC,WAAR,eACKD,EAAQC,WADb,GAEKC,MAGAf,EA+BagB,CALFvB,EACCD,EAI4ByB,SACvCC,EAAYnB,EAAUa,SAAS5E,KAAI,SAAC6E,GACxC,OAAOA,EAAQC,cAEjBlB,EAAYG,GACZL,EAAQwB,MAGT,CAAC1B,EAAUC,IASZ,uBAAKtD,UAAWX,EAAQlB,MACtB,0BAAKiB,EAAW,uEAAkB,iDAAlC,KACA,uBAAKY,UAAWX,EAAQ4D,OACtB,gBAAC,IAAD,CACEpD,IAAK,CACHmF,OAAQ,CAAC,mBAAoB,WAC7BC,MAAO,EACPzD,MAAO,QACP0D,KAAM,GAER1D,MAAO,CACL0B,SAAU,WACViC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,IAGT5B,GACC,gBAAC,IAAD,CAAO6B,OAAQ7B,EAAU6B,QACtBnG,EAAWsE,EAAUgB,QAAQlF,KAAOkE,EAAUgB,QAAQR,mBACvD,sBACE1C,MAAO,CACLvC,OAAQ,IAGV,2BAAMG,EAAW,6BAAW,qBAAuBsE,EAAUgB,QAAQP,uBACrE,2BAAM/E,EAAW,6BAAW,mBAAqBsE,EAAUgB,QAAQN,gBACnE,2BAAMhF,EAAW,iBAAS,gBAAkBsE,EAAUgB,QAAQJ,YAC9D,2BAAMlF,EAAW,iBAAS,gBAAkBsE,EAAUgB,QAAQH,aAInElD,GAAQ,CACP,gBAAC,IAAD,CACEpB,IAAK,IACLuF,QAAS,CACPC,SAAS,GAEXC,OAAQ,CACNrE,KAAMmC,GAERmC,MAAO,CACLC,OAAQ,CACNxB,eAAgB,CACdyB,KAAM,cAIZlF,MAAO,CACLiF,OAAQ,QAEVE,MAAO,CACLF,OAAQ,QAEVpE,MAAO,CACLC,QAAS,KAGb,gBAAC,IAAD,CACExB,IAAK,IACLyF,OAAQ,CACNrE,KAAMmC,GAER1C,KAAM,CACJ8E,OAAQ,IAEVjF,MAAO,CACLiF,OAAQ,QAEVE,MAAO,CACLF,OAAQ,QAEVpE,MAAO,CACLC,QAAS,KAGb,gBAAC,IAAD,CACExB,IAAK,IACLuF,QAAS,CACPC,SAAS,GAEXC,OAAQ,CACNrE,OACA0E,OAAQ,CACNF,KAAM,OACNG,YAAa,aAGjBL,MAAO,CACLC,OAAQ,CACNxB,eAAgB,CACdyB,KAAM,SAIZlF,MAAO,CACLiF,OAAQ,WAEVE,MAAO,CACLF,OAAQ,UAEVK,OAAQ,CACNC,OAAQ,CACNvF,MAAO,YAGXG,KAAM,CACJqF,MAAO,iBACPP,OAAQ,CAAC,EAAG,KAEdQ,QAAS,CACPC,QAAQ,GAEV7E,MAAO,CACLC,QAAS,KAGX,gBAAC,IAAD,CAAYoE,KAAK,YAAYS,QA9HzC,SAAmBC,GACjB5C,EAAa,CACX4B,OAAQgB,EAAKC,OACb9B,QAAS6B,EAAK7B,qB,oDCvHZ+B,EAAWvI,YAAW,CACxBC,KAAM,CACFuI,QAAS,MACTrI,OAAQ,OACRD,MAAO,OACPW,QAAS,OACT6C,cAAe,SACfC,WAAY,eACZ7C,eAAgB,eAChBT,SAAU,OACVoI,SAAU,SACV7E,gBAAiB,QACjB,MAAO,CACH7C,OAAQ,MAoDL2H,EAhDI,SAACzH,GAAgB,IACxBC,EAA0BD,EAA1BC,SAAUyH,EAAgB1H,EAAhB0H,YACZxH,EAAUoH,IAmBhB,OAJAhE,qBAAU,cAEP,CAACoE,IAGA,yBAAK7G,UAAWX,EAAQlB,MACnB0I,EAAcC,OAAOC,KAAKF,GAAahH,KAAI,SAACmH,GACzC,OAAQA,GACJ,IAAK,cACD,OAAO5H,EAAW,uBAAGa,IAAK+G,GAAR,oCAAsBH,EAAYG,KAAa,GACrE,IAAK,qBACD,OAAO5H,EAAW,GAAK,uBAAGa,IAAK+G,GAAR,wBAA8BH,EAAYG,KACrE,IAAK,wBACD,OAAO,uBAAG/G,IAAK+G,GAAR,UAAgB5H,EAAW,mCAAY,6BAAvC,OAAqEyH,EAAYG,KAC5F,IAAK,iBACD,OAAO,uBAAG/G,IAAK+G,GAAR,UAAgB5H,EAAW,mCAAY,qBAAvC,OAA6DyH,EAAYG,KACpF,IAAK,iBACD,OAAO,uBAAG/G,IAAK+G,GAAR,UAAgB5H,EAAW,uBAAU,qBAArC,OAA2DyH,EAAYG,KAClF,IAAK,aACD,OAAO,uBAAG/G,IAAK+G,GAAR,UAAgB5H,EAAW,uBAAU,iBAArC,OAAuDyH,EAAYG,KAC9E,IAAK,YACD,OAAO,uBAAG/G,IAAK+G,GAAR,UAAgB5H,EAAW,uBAAU,gBAArC,OAAsDyH,EAAYG,KAC7E,IAAK,aACD,OAAO,uBAAG/G,IAAK+G,GAAR,UAAgB5H,EAAW,6BAAW,iBAAtC,OAnC3B,SAAiB6H,GACb,IAAIC,EAAO,IAAIC,KAAKF,GAOpB,OANQC,EAAKE,cAAgB,MACpBF,EAAKG,WAAa,EAAI,GAAK,KAAOH,EAAKG,WAAa,GAAKH,EAAKG,WAAa,GAAK,OAChFH,EAAKI,UAAY,GAAK,IAAOJ,EAAKI,UAAaJ,EAAKI,WAAa,OACjEJ,EAAKK,WAAa,GAAK,IAAML,EAAKK,WAAaL,EAAKK,YAAc,OAClEL,EAAKM,aAAe,GAAK,IAAMN,EAAKM,aAAeN,EAAKM,cAAgB,MACxEN,EAAKO,aAAe,GAAK,IAAMP,EAAKO,aAAeP,EAAKO,cA4BcC,CAAQb,EAAYG,GAAMH,EAAYG,IAAO,IAAIG,MAAOO,aAC3H,QACI,MAAO,OAEd,uBAAGlG,MAAO,CAAE/C,UAAW,WAAaW,EAAW,uFAAmB,qDCvD7EnB,EAAYC,aAAW,SAAAyJ,GAAK,MAAK,CACnCC,MAAO,CACHC,OAAQ,QAGZC,QAAS,CACL5E,SAAU,WACVvC,MAAO,QACPoH,WAAY,eACZC,WAAY,MACZC,UAAW,OAEf3I,KAAM,CACF4D,SAAU,WACVmC,MAAO,IACPC,OAAQ,IACRlH,MAAO,QACPC,OAAQ,aA+VD6J,MA5Vf,SAAe/I,GAAQ,IAAD,EACoBkD,qBADpB,mBACXwE,EADW,KACEsB,EADF,KAEV9E,EAA4ClE,EAA5CkE,SAAUjE,EAAkCD,EAAlCC,SAAUgJ,EAAwBjJ,EAAxBiJ,SAAUxE,EAAczE,EAAdyE,UAChCvE,EAAUpB,IA8UhB,OAjTAwE,qBAAU,WAMN,IAMI4F,GAAe,GAAfA,EAAsB,GAAtBA,EAA6B,EAiCjC,IAeIC,EACAC,EACAC,EASApK,EAAOC,EAGPoK,EAAMC,EAGNC,EAEAC,EAAYC,EAAKC,EAAMC,EAGvBC,EArCAlB,EAAUmB,IAAU,YAEpBC,EAASD,IAAU,UACnBE,EAAUD,EAAOE,OAAOC,WAAW,MAEnCC,EAAQ,CAAEzD,KAAM,UAGhB0D,EAAaN,MAAqBO,UAAU,IAG5CC,EAAYR,MAGZS,EAAOT,IAAWM,GAAYJ,QAAQA,GAMtCQ,EAAWV,MAsEf,SAASW,IAELT,EAAQU,UAAY,UACpBV,EAAQW,SAAS,EAAG,EAAG1L,EAAOC,GAG9B0L,EAAKT,EA/HQ,WAgIbU,EAAOP,EA9HU,WA+HjBM,EAAKtB,EAAM,SACXuB,EAAOtB,EAAW,SAGlBA,EAAUjE,SAAST,SAAQ,SAAAgD,GACvB,IAAIrG,EACAnB,EAGJ,GADAA,GADAA,EAAOmJ,EAAYsB,MAAK,SAACC,GAAD,OAAWC,SAASD,EAAME,MAAQD,SAASnD,EAAGoD,QACxD5K,EAAKA,KAAO,GAC1B,CAEA,IAtLM0K,EAsLFG,EAAUhH,EAASyB,QAAQmF,MAAK,SAAAK,GAAC,OAAIA,EAAEC,sBAAwB/K,KAEnE,GADA6K,EAAUA,EAAUA,EAAQjG,eAAiB,GAG7CzD,GA1LMuJ,EA0LWG,GAzLb,IACDG,IAAI,IAGPN,EAAQ,IACDM,IAAI,KAGPN,EAAQ,IACDM,IAAI,KAGPN,EAAQ,IACDM,IAAI,KAGPN,EAAQ,IACDM,IAAI,KAGJA,IAAI,KAsKvBT,EAAK/C,EAAIrG,OAaTqI,GACAe,EAAKf,EAAgB,WAI7B,SAASe,EAAKU,EAAK9J,GACfwI,EAAQuB,YACRhB,EAAKe,GACLtB,EAAQU,UAAYlJ,EACpBwI,EAAQY,OAGZ,SAASC,EAAOS,EAAK9J,GACjBwI,EAAQuB,YACRhB,EAAKe,GACLtB,EAAQwB,YAAchK,EACtBwI,EAAQa,SAGZ,SAASY,EAAOC,GACZhC,EAAMI,OACNH,EAAOD,EAAMc,GACFkB,KACP9B,EAAWQ,EAAWqB,UACb,IAhIFE,KAgIQhC,EACfS,EAAWqB,OAAO7B,GAClBa,KAEJD,EAAWd,EAGf,IAAMkC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAMbD,EAAGpH,EAAWwE,GAND,2CAAH,sDAWd,SAAS8C,EAAgBC,EAASC,GAO9B,IANA,IAIIC,EAAIC,EAJJC,EAAIJ,EAAQtI,OACZ2I,EAAIL,EAAQI,EAAI,GAChBE,EAAIL,EAAM,GAAIM,EAAIN,EAAM,GACxBO,EAAKH,EAAE,GAAII,EAAKJ,EAAE,GAElBK,GAAS,EACJnJ,EAAI,EAAGA,EAAI6I,IAAK7I,EAErB2I,GADAG,EAAIL,EAAQzI,IACL,IACP4I,EAAKE,EAAE,IACIE,IAAQE,EAAKF,GAAQD,GAAKE,EAAKN,IAAOK,EAAIJ,IAAOM,EAAKN,GAAMD,IAAKQ,GAAUA,GACtFF,EAAKN,EACLO,EAAKN,EAET,OAAOO,GA5IP9C,EAAWQ,EAAWqB,UACb,GAAKvC,EACdU,EAAS,GAAKV,EACdU,EAAS,GAAKV,EACdkB,EAAWqB,OAAO7B,GAuLlB1F,GAAU+E,GAAUxE,GACpBmH,GAAS,SAAUe,EAAOC,GACtBtD,EAAOuD,IAAiBF,EAAOA,EAAMG,QAAQxD,MAC7CC,EAAYsD,IAAiBF,EAAOA,EAAMG,QAAQvD,WAClDC,EAAcoD,EAtLlB3N,EAAQ8N,SAASC,gBAAgBC,YACjC/N,EAAS6N,SAASC,gBAAgBE,aAClCnD,EAAOoD,KAAK,QAASlO,GAAOkO,KAAK,SAAUjO,GAE3CkL,EACK5D,MA/FS,GA+FY4G,KAAKC,IAAIpO,EAAOC,GAAW,GAChDoO,UAAU,CAACrO,EAAQ,EAAGC,EAAS,IACpCuL,IAkLIhB,EAAaK,IAAS2B,MAG9B1B,EACKwD,KAAKzD,MACD0D,GAAG,SA5KZ,WACIrE,EAAKsE,IAAOC,UAAUtD,EAAWuD,OAAO7D,IAAS8D,QACjDxE,EAAKgB,EAAWqB,SAChBpC,EAAKoE,IAAOrE,GANZK,EAAWoE,UAgLNL,GAAG,QAtKZ,WACI,IAAIM,EAAKL,IAAOC,UAAUtD,EAAWqB,OAAOrC,GAAIuE,OAAO7D,IAAS8D,QAC5DG,EAAKN,IAAOO,SAAS3E,EAAIoE,IAAOQ,MAAM9E,EAAI2E,IAC1CI,EAAKT,IAAO7D,SAASmE,GACzB3D,EAAWqB,OAAOyC,GAClBzD,OAkKK+C,GAAG,OA/JZ,WAvBA,IAAuBW,IAtGH,IAuGhB1E,EAAW2E,QAAQ3C,EAAQ0C,GAAS,OAuLnCX,GAAG,aA5DR,WACI,IAAIa,EAuBR,SAAoBC,GAChB,IAAIC,EAAMnE,EAAWuD,OAAO7D,IAASwE,IACrC,OAAO/E,EAAUjE,SAASwF,MAAK,SAAAK,GAAC,OAC5BA,EAAEqD,SAAS3H,YAAYiE,MAAK,SAAA2D,GAAE,OAC1B1C,EAAgB0C,EAAIF,IAEpBE,EAAG3D,MAAK,SAAA4D,GAAE,OACN3C,EAAgB2C,EAAIH,YA9BxBI,CAAWf,MAGdS,EASDA,IAAMxE,IAGVA,EAAiBwE,EAGjB5D,IAlOJ,SAAemE,GACXA,EAAUpF,EAAYsB,MAAK,SAAUuD,GACjC,OAAOA,EAAEpD,KAAO2D,EAAQ3D,MAG5B,IAAI4D,EAAO3K,EAASyB,QAAQmJ,QAAO,SAACC,GAAD,OAAOA,EAAEhK,sBAAwB6J,GAAWA,EAAQvO,MAAQ,KAAO0O,EAAE3D,uBAAyBwD,GAAWA,EAAQvO,MAAQ,OAE5J2I,EAAe6F,EAAK,IA4NpBG,CAAMX,IAfExE,IAxMRlB,EAAQsG,KAAK,IA0MLpF,OAAiBqF,EACjBzE,UAgEb,CAACvG,EAAU+E,EAAUxE,IAEpB,yBAAKpC,MAAO,CAAEnD,OAAQ,QAASD,MAAO,QAAS8E,SAAU,aACrD,wBAAIkH,GAAG,UAAUpK,UAAWX,EAAQyI,UACpC,4BAAQsC,GAAG,QAAQpK,UAAWX,EAAQuI,QACtC,yBAAK5H,UAAWX,EAAQC,MACpB,kBAAC,EAAD,CAAYF,SAAUA,EAAUiE,SAAUA,EAAUwD,YAAaA,O,qDC9VlEyH,MAjBf,SAAiBnP,GAAY,IACjBoP,EAA4BpP,EAA5BoP,UAAWC,EAAiBrP,EAAjBqP,aAMnB,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAS,kBAACC,EAAD,CAAWC,QAASN,EAAWO,SAP/B,WACjBN,GAAcD,IAM0D/O,KAAK,cACrEuP,MAAM,SAgBhBH,EAAYI,aAAW,SAACrH,GAAD,OACzBsH,YAAa,CACT9Q,KAAM,CACFC,MAAO,GACPC,OAAQ,GACRqI,QAAS,EACTzH,OAAQ0I,EAAMuH,QAAQ,IAE1BC,WAAY,CACRzI,QAAS,EACT,YAAa,CACT0I,UAAW,mBACXzO,MAAOgH,EAAM0H,QAAQC,OAAOC,MAC5B,aAAc,CACVzN,gBAAiB,UACjBL,QAAS,EACT+N,OAAQ,SAGhB,wBAAyB,CACrB7O,MAAO,UACP6O,OAAQ,mBAGhBC,MAAO,CACHrR,MAAO,GACPC,OAAQ,IAEZqR,MAAO,CACHC,aAAc,GACdH,OAAO,aAAD,OAAe7H,EAAM0H,QAAQO,KAAK,MACxC9N,gBAAiB6F,EAAM0H,QAAQO,KAAK,IACpCnO,QAAS,EACTQ,WAAY0F,EAAMkI,YAAYC,OAAO,CAAC,mBAAoB,YAE9DjB,QAAS,GACTkB,aAAc,OApCJf,EAsChB,YAAmC,IAAhC3P,EAA+B,EAA/BA,QAAYF,EAAmB,2BAChC,OACI,kBAAC6Q,EAAA,EAAD,eACIC,sBAAuB5Q,EAAQ0Q,aAC/BG,eAAa,EACb7Q,QAAS,CACLlB,KAAMkB,EAAQlB,KACdgR,WAAY9P,EAAQ8P,WACpBM,MAAOpQ,EAAQoQ,MACfC,MAAOrQ,EAAQqQ,MACfb,QAASxP,EAAQwP,UAEjB1P,O,SC3EVsH,EAAWvI,YAAW,CACxBC,KAAM,CACFE,OAAQ,QACRD,MAAO,QACP8E,SAAU,YAEdiN,QAAS,CACLjN,SAAU,WACViC,IAAK,MACLC,KAAM,OACNgL,OAAQ,KAkCDC,MA/Bf,SAAuBlR,GAAa,IACxBC,EAAqDD,EAArDC,SAAUiE,EAA2ClE,EAA3CkE,SAAUC,EAAiCnE,EAAjCmE,QAAS8E,EAAwBjJ,EAAxBiJ,SAAUxE,EAAczE,EAAdyE,UADhB,EAEGvB,oBAAS,GAFZ,mBAExBkM,EAFwB,KAEbC,EAFa,KAGzBnP,EAAUoH,IAYhB,OAXAhE,qBAAU,WACN6N,cAAeC,OAAO,iBAAkB,CACpCC,SAAU,IACVC,SAAU,MACVC,OAAO,EACP9F,OAAQ,CACJa,GAAI,IACJkF,GAAI,QAGb,IAEC,yBAAK3Q,UAAWX,EAAQlB,KAAO,kBAE3B,yBAAK6B,UAAWX,EAAQ8Q,SACpB,kBAAC,EAAD,CAAQ5B,UAAWA,EAAWC,aAAcA,KAEhD,yBAAKhN,MAAO,CAAEzC,QAASwP,EAAY,OAAS,QAASlQ,OAAQ,QAASD,MAAO,UACzE,kBAAC,EAAD,CAAMkF,QAASA,EAASD,SAAUA,EAAUjE,SAAUA,KAE1D,yBAAKoC,MAAO,CAAEzC,QAASwP,EAAY,QAAU,OAAQlQ,OAAQ,QAASD,MAAO,UACzE,kBAAC,EAAD,CAAQiF,SAAUA,EAAUO,UAAWA,EAAWwE,SAAUA,EAAUhJ,SAAUA,O,mBC1C1FqH,GAAWvI,YAAW,CAC1BC,KAAM,CACJuI,QAAS,MACTrI,OAAQ,OACRU,QAAS,OACT6C,cAAe,SACf5C,eAAgB,eAChBT,SAAU,QAEZyD,KAAM,CACJvD,UAAW,SACXF,SAAU,UAwHCqS,GArHO,SAACzR,GAAgB,IAC7BC,EAAwBD,EAAxBC,SAAUyR,EAAc1R,EAAd0R,UACZxR,EAAUoH,KAmBVqK,EAAgB,CACpB,2BACA,uCACA,6CACA,2BACA,uCACA,2BACA,2BACA,uCACA,uCACA,uCACA,iCACA,2BACA,2BACA,uCACA,eACA,4BAGIC,EAAgB,CACpB,kBACA,oBACA,4BACA,eACA,uBACA,gBACA,sBACA,wBACA,0BACA,kBACA,kBACA,cACA,aACA,SACA,WACA,eAGIC,EAAe7R,EAAM8R,cA3DS,MA0E6B5O,qBA1E7B,mBA0E7B2L,EA1E6B,KA0EvBkD,EA1EuB,KAoFpC,OATAzO,qBAAU,WAELoO,GACDK,EAAQL,EAAU5C,QAAO,SAAC/D,GAAD,OAAaA,EAAMiH,oBAAsBH,QACnE,CAACA,EAAaH,IACjBpO,qBAAU,cAEP,CAACuL,IAGF,yBAAKhO,UAAWX,EAAQlB,MACrB6P,EACCA,EAAK,GAAKlH,OAAOC,KAAKiH,EAAK,IAAInO,KAAI,SAACI,EAAamR,GAC/C,MAAY,WAARnR,GAA4B,aAARA,GAA8B,eAARA,GAAgC,YAARA,GAA6B,eAARA,EAClF,0BAAMA,IAAKA,GAChB,4BAAKb,EAAS0R,EAAcM,GAAOL,EAAcK,IAAU,OAC3D,2BAAIpD,EAAQA,EAAK,GAAW/N,GAAO,KAIzB,eAARA,EACK,0BAAMA,IAAKA,GAChB,4BAAKb,EAAS0R,EAAcM,GAAOL,EAAcK,IAAU,OAC3D,2BAAIpD,EApClB,SAAiB/G,GACf,IAAIC,EAAO,IAAIC,KAAKF,GAOpB,OANQC,EAAKE,cAAgB,MACpBF,EAAKG,WAAa,EAAI,GAAK,KAAOH,EAAKG,WAAa,GAAKH,EAAKG,WAAa,GAAK,OAChFH,EAAKI,UAAY,GAAK,IAAOJ,EAAKI,UAAaJ,EAAKI,WAAa,OACjEJ,EAAKK,WAAa,GAAK,IAAML,EAAKK,WAAaL,EAAKK,YAAc,OAClEL,EAAKM,aAAe,GAAK,IAAMN,EAAKM,aAAeN,EAAKM,cAAgB,MACxEN,EAAKO,aAAe,GAAK,IAAMP,EAAKO,aAAeP,EAAKO,cA6B1CC,CAASsG,EAAK,GAAW/N,IAAQ,UAI9C,KAOJ,uBAAGD,UAAWX,EAAQ2C,MAAO5C,EAAW,6FAAoB,4DAG9D,2BAAIA,EAAW,6FAAoB,8D,qBCmB5BiS,GAvHQ,SAAClS,GAAgB,IAGlCU,EAFIG,EAAiFb,EAAjFa,UAAWsR,EAAsEnS,EAAtEmS,aAAcC,EAAwDpS,EAAxDoS,iBAAkBnS,EAAsCD,EAAtCC,SAAUyR,EAA4B1R,EAA5B0R,UAAWW,EAAiBrS,EAAjBqS,aAGlEC,EAAiB,WAErB5R,EAAM6R,KAAQ,MAAOF,EAAaG,UAAUvT,MAAOoT,EAAaG,UAAUtT,QAa1E,IAAIgD,EAAOwP,EAAUhR,KAAI,SAACmH,GACxB,MAAO,CAAE4K,eAAI5K,EAAGmK,kBAAmBU,SAAU7K,EAAGuD,oBAAqBL,MAAOlD,EAAG7C,0BAEjFqN,EAAaM,MAAM9N,SAAQ,SAACkG,GAG1B,IAAI6H,EAAe1Q,EAAK4M,QAAO,SAACjH,GAAD,OAAaA,EAAG4K,eAAO1H,EAAM1K,QAGxDmB,EApDO,SAACuJ,GAChB,OAAIA,EAAQ,GACHM,IAAI,IAGPN,EAAQ,GACHM,IAAI,KAGPN,EAAQ,IACHM,IAAI,KAGPN,EAAQ,IACHM,IAAI,KAGJA,IAAI,KAmCKwH,CAAS7H,SAAS4H,EAAa,GAAG7H,QAGlD+H,EAAc/H,EAAMgI,IAAIrS,KAAI,SAACsS,GAC/B,OAAOA,EAAIC,OAAS,IAAMD,EAAIE,MAAMC,KAAK,QACxCA,KAAK,KAGJC,EAAW1S,EAAI6J,KAAKuI,GAAa3F,KAAK,CACxC,KAAQ3L,EACR,OAAU,YAIZ4R,EAASC,OACP,WACElB,IACAmB,YAAW,WACTlB,EAAiBrH,EAAM1K,MACvB8R,MACC,QAKPiB,EAASG,WACP,WACEH,EAASjG,KAAK,OAAQ,cAK1BiG,EAASI,UACP,WACEJ,EAASjG,KAAK,OAAQ3L,MAM1B,IAAIiS,EAAML,EAASM,UAGfzE,EAAOvO,EAAIuO,KACZwE,EAAInH,EAAKmH,EAAIxU,MAAQ,GAAM8L,EAAM4I,OAAS5I,EAAM4I,OAAOrH,EAAI,GAC3DmH,EAAIlH,EAAKkH,EAAIvU,OAAS,GAAM6L,EAAM4I,OAAS5I,EAAM4I,OAAOpH,EAAI,GAC7DtM,EAAW2S,EAAa,GAAGH,aAAKG,EAAa,GAAGF,UAChDvF,KAAK,SAAU,WAGjB8B,EAAKsE,WACH,WACEH,EAASjG,KAAK,OAAQ,cAK1B8B,EAAKuE,UACH,WACEJ,EAASjG,KAAK,OAAQ3L,MAK1ByN,EAAKoE,OACH,WACElB,IACAmB,YAAW,WACTlB,EAAiBrH,EAAM1K,MACvB8R,MACC,YAeX,OAVA7O,qBAAU,WAKR,OAHIoO,GAAaW,GACfC,IAEK,WACD5R,GACFA,EAAIkT,YAEP,CAAC3T,EAAUyR,EAAWW,IAEvB,yBAAKpH,GAAG,MAAMpK,UAAWA,KC9IvBgT,GAAgB9U,YAAW,CAC7BC,KAAM,CACJY,QAAS,OACTC,eAAgB,aAChB6C,WAAY,UAEdkN,MAAO,CACL1Q,OAAQ,OACRD,MAAO,OACP6U,YAAa,MACb1U,SAAU,SAkBC2U,OAVf,SAAe/T,GACb,IAAME,EAAU2T,KACRrS,EAAgBxB,EAAhBwB,MAAOuJ,EAAS/K,EAAT+K,MACf,OACE,yBAAKlK,UAAWX,EAAQlB,MACtB,yBAAK6B,UAAWX,EAAQ0P,MAAOvN,MAAO,CAAEM,gBAAiBnB,KACzD,8BAAOuJ,KChBTjM,GAAYC,YAAW,CAC3BC,KAAM,CACJE,OAAQ,QACRD,MAAO,QACPW,QAAS,OACTC,eAAgB,SAChB6C,WAAY,UAEdsR,OAAQ,CACNlL,UAAW,OACXgL,YAAa,MACbzD,OAAQ,kBACRG,aAAc,MACdjJ,QAAS,MACT/H,SAAU,QACVmD,gBAAiB,WAEnBsR,OAAQ,CACNhV,MAAO,OACPC,OAAQ,OACRU,QAAS,OACT6C,cAAe,SACf5C,eAAgB,eAChB0H,QAAS,MACTzE,WAAY,gBACZ,SAAU,CACRlD,QAAS,OACT2H,QAAS,MACT1H,eAAgB,gBAChBX,OAAQ,MACRwD,WAAY,WAGdwR,GAAI,CACAjV,MAAO,QACPC,OAAQ,OACRsC,MAAO,UACPpC,SAAU,OACVE,UAAW,YAkEJ6U,OA3Df,SAAenU,GAAa,IAClB0R,EAAsC1R,EAAtC0R,UAAWzR,EAA2BD,EAA3BC,SAAUoS,EAAiBrS,EAAjBqS,aADJ,EAEiBnP,mBAAS,IAF1B,mBAElB4O,EAFkB,KAEHM,EAFG,KAGnB4B,EAAmB,CACvB,CACExS,MAAO6J,IAAI,IACXN,MAAO,QAET,CACEvJ,MAAO6J,IAAI,KACXN,MAAO,SAET,CACEvJ,MAAO6J,IAAI,KACXN,MAAO,SAET,CACEvJ,MAAO6J,IAAI,KACXN,MAAO,WAET,CACEvJ,MAAO6J,IAAI,KACXN,MAAO,SAGL7K,EAAUpB,KAzBS,EA0BKoE,oBAAS,GA1Bd,mBA0BlBwM,EA1BkB,KA0BT0E,EA1BS,KAwCzB,OAZA9Q,qBAAU,WACR6N,cAAeC,OAAO,YAAa,CACjCC,SAAU,IACVC,SAAU,MACVC,OAAO,EACP9F,OAAQ,CACNa,EAAG,GACHkF,EAAG,QAGN,IAGD,yBAAK3Q,UAAWX,EAAQlB,KAAO,aAC7B,kBAAC,GAAD,CAAiBqT,aAAcA,EAAcpS,SAAUA,EAAUyR,UAAWA,EAAWS,aAAc,kBAAMiC,GAAW,SAAAC,GAAI,OAAKA,MAAOjC,iBAAkBA,IACxJ,yBAAKvR,UAAWX,EAAQ8T,QACtB,gCAAS/T,EAAW,uCAAW,2BAC9B+T,EAAOtT,KAAI,SAACmH,EAASoK,GAAV,OAA4B,kBAAC,GAAD,CAAOnR,IAAKmR,EAAOzQ,MAAOqG,EAAGrG,MAAOuJ,MAAOlD,EAAGkD,YAGxF,yBAAKE,GAAG,SAASpK,UAAWX,EAAQ+T,QAClC,kBAACK,EAAA,EAAD,CAAOC,UAAU,OAAOC,GAAI9E,EAAS+E,cAAY,EAACC,eAAa,GAC7D,kBAACC,GAAA,EAAD,CAAOC,UAAW,IAChB,kBAAC,GAAD,CAAelD,UAAWA,EAAWzR,SAAUA,EAAU6R,cAAeA,S,UCtG9EhT,GAAYC,aAAW,SAAAyJ,GAAK,MAAK,CACnCqM,MAAO,CACH3V,OAAQ,OACRD,MAAO,OACPuC,MAAO,eA+FAsT,OA5Ff,SAAmB9U,GAAY,IAEnBC,EAAsCD,EAAtCC,SAAUyR,EAA4B1R,EAA5B0R,UAAWqD,EAAiB/U,EAAjB+U,aACvB7U,EAAUpB,KAoFhB,OAlFAwE,qBAAU,WAQN,GAAIoO,EAAW,CAUX,IAAIxP,EAAOwP,EAAUhR,KAAI,SAACmH,GACtB,MAAO,CACH4K,eAAI5K,EAAGmK,kBACPU,SAAU7K,EAAGuD,oBACbL,MAAOlD,EAAGkN,GAAgB,EAAIlN,EAAGkN,GAAgB,MAGzD7S,EAAOA,EAAK8S,MAAK,SAAClJ,EAAQmJ,GAAT,OAAsBA,EAAElK,MAAQe,EAAEf,SACnD,IAAM8J,EAAQ,IAAIK,KAAM,CACpBC,UAAW,WACX7O,SAAS,IAiDb,OA/CAuO,EAAM3S,KAAKA,GACX2S,EAAMrO,MAAM,CACRuE,MAAO,CAEHqK,IAAmC,IAA9BlT,EAAKA,EAAKwB,OAAS,GAAGqH,MAC3BsC,IAAK,EACLgI,MAAOpV,EAAW,sBAAS,YAInC4U,EAAMS,KAAKrV,EAAW,eAAO,WAAY,CACrCd,MAAO,CACHwU,OAAQ,GACRtR,MAAO,CACHuI,KAAM,UACNxL,SAAU,GACVC,WAAY,MAGpBkW,SAAU,OAGdV,EAAMS,KAAK,QAAS,CAChB1F,MAAO,KACPzQ,MAAO,CACHwU,OAAQ,EACRtR,MAAO,CACHuI,KAAM,UACNxL,SAAU,GACVC,WAAY,QAIxBwV,EAAMW,aAAaC,YACnBZ,EACKa,WACA3R,UAAU9D,EAAW,eAAO,YAAc,UAC1C0B,KAAK,IACLiO,MAAM,QAAS,CACZvN,MAAO,CACHuI,KAAM,UACNvL,WAAY,KAEhBsU,OAAQ,KAEhBkB,EAAMc,YAAY,kBAClBrC,YAAW,kBAAMuB,EAAMpK,WAAU,GAC1B,WACHoK,EAAMe,cAGf,CAACb,EAAc9U,EAAUyR,IAExB,yBAAKzG,GAAG,WAAWpK,UAAWX,EAAQ2U,S,wCC3FxC/V,GAAYC,aAAW,SAAAyJ,GAAK,MAAK,CACnCqN,YAAa,CACT/V,OAAQ0I,EAAMuH,QAAQ,GACtBvQ,SAAU,IACV6Q,OAAQ,kBACRG,aAAc,MACdjJ,QAAS,WA0CFuO,OAtCf,SAAmB9V,GAAa,IACpB+U,EAA4C/U,EAA5C+U,aAAcgB,EAA8B/V,EAA9B+V,gBAAiB9V,EAAaD,EAAbC,SACjCC,EAAUpB,KAFW,EAGHmF,IAAMf,UAAS,GAHZ,mBAGpB8S,EAHoB,KAGdC,EAHc,KAgB3B,OACI,kBAACC,GAAA,EAAD,CAAarV,UAAWX,EAAQ2V,aAC5B,kBAACM,GAAA,EAAD,CAAYlL,GAAG,qCAAqChL,EAAS,eAAK,WAClE,kBAACmW,GAAA,EAAD,CACIC,QAAQ,oCACRpL,GAAG,8BACH+K,KAAMA,EACNM,QAdQ,WAChBL,GAAQ,IAcAM,OAXO,WACfN,GAAQ,IAWAlL,MAAOgK,EACPpF,SArBS,SAACrB,GAClByH,EAAgBzH,EAAMkI,OAAOzL,SAsBrB,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,yBAA0B9K,EAAS,iCAAQ,2BAC5D,kBAACwW,GAAA,EAAD,CAAU1L,MAAO,kBAAmB9K,EAAS,iCAAQ,iBACrD,kBAACwW,GAAA,EAAD,CAAU1L,MAAO,kBAAmB9K,EAAS,iCAAQ,mBACrD,kBAACwW,GAAA,EAAD,CAAU1L,MAAO,cAAe9K,EAAS,qBAAM,eAC/C,kBAACwW,GAAA,EAAD,CAAU1L,MAAO,aAAc9K,EAAS,qBAAM,iBC3CxDnB,GAAYC,aAAW,SAAAyJ,GAAK,MAAK,CACnCxJ,KAAM,CACFE,OAAQ,QACRD,MAAO,QACPW,QAAS,OACT6C,cAAe,SACf5C,eAAgB,SAChB6C,WAAY,UAEhBgU,YAAa,CACT9W,QAAS,OACTC,eAAgB,gBAChB6C,WAAY,cAgCLiU,OA3Bf,SAAkB3W,GAAY,IAElBC,EAAwBD,EAAxBC,SAAUyR,EAAc1R,EAAd0R,UAFQ,EAGcxO,mBAAS,kBAHvB,mBAGnB6R,EAHmB,KAGLgB,EAHK,KAIpB7V,EAAUpB,KAYhB,OAXAwE,qBAAU,WAEN6N,cAAeC,OAAO,eAAgB,CAClCC,SAAU,IACV5F,OAAQ,CACJa,GAAI,GACJkF,GAAI,IAERD,OAAO,MAEZ,CAACtR,EAAUyR,EAAWqD,IAErB,yBAAKlU,UAAWX,EAAQlB,KAAO,gBAC3B,4BAAMiB,EAAW,2BAAS,sBAC1B,yBAAKY,UAAWX,EAAQwW,aACpB,kBAAC,GAAD,CAAW3B,aAAcA,EAAc9U,SAAUA,EAAU8V,gBAAiBA,KAEhF,kBAAC,GAAD,CAAWhB,aAAcA,EAAc9U,SAAUA,EAAUyR,UAAWA,M,wJC5CnEkF,GAFC,6BCMDC,GAJF,uCAAG,4BAAA/K,EAAA,sEACSgL,MAAMF,GAAQ,SAASG,MAAK,SAAAhI,GAAC,OAAIA,EAAEiI,UAD5C,cACRC,EADQ,yBAELA,GAFK,2CAAH,qDCcPnY,GAAYC,aAAW,SAACyJ,GAAD,MAAY,CACvCxJ,KAAM,GAGNU,MAAO,CACLR,OAAQ,EACRgY,WAAY,UAEdC,OAAQ,CACNlH,UAAW,eACXpH,WAAY,OACZ/F,WAAY0F,EAAMkI,YAAYC,OAAO,YAAa,CAChDU,SAAU7I,EAAMkI,YAAYW,SAAS+F,YAGzCC,WAAY,CACVpH,UAAW,kBAEbqH,OAAQ,CACN3U,gBAAiB0I,KAAI,MAEvBkM,WAAY,CACVzD,YAAatL,EAAMuH,QAAQ,IAE7B5Q,MAAO,CACLqY,SAAU,OA+DCC,OA3Df,SAAoBzX,GAAa,IACvBiL,EAAgBjL,EAAhBiL,GAAIgL,EAAYjW,EAAZiW,QACN/V,EAAUpB,KAFc,EAGEoE,qBAHF,mBAGvBwU,EAHuB,KAGbC,EAHa,OAINzU,oBAAS,GAJH,mBAIvBN,EAJuB,KAIjBgV,EAJiB,KAiB9B,OATAtU,qBAAU,YACO,uCAAG,4BAAAwI,EAAA,sEACC+L,KADD,OACZC,EADY,OAEhBH,EAAY,CAACG,EAAKnS,QAAQsF,KAC1BqI,YAAW,kBAAMsE,GAAShV,KAAO,GAHjB,2CAAH,qDAKfmV,KACC,IAGD,yBAAKlX,UAAWX,EAAQlB,MACtB,kBAACgZ,GAAA,EAAD,CAAQjU,SAAS,UACf,kBAACkU,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,KAAK,QAAQtX,UAAWX,EAAQqX,WAAY/V,MAAM,UAAU4W,aAAW,YAAY5V,QAAS,WAf9GyT,GAAQ,KAgBA,kBAAC,KAAD,OAEF,kBAAC7U,EAAA,EAAD,CAAYE,QAAQ,KAAKT,UAAWX,EAAQf,OAA5C,UAMFyD,EACE,yBAAKP,MAAO,CAAEzC,QAASgD,EAAO,OAAS,OAAQ/C,eAAgB,WAC7D,kBAAC+D,EAAA,EAAD,CAAkBjC,KAAM,GAAIkC,UAAW,EAAGrC,MAAM,eAGlDkW,GAAYA,EAAShX,KAAI,SAACC,EAAWsR,GACnC,OAAO,kBAACrR,EAAA,EAAD,CAAMC,UAAWX,EAAQlB,KAAM8B,IAAKmR,GACzC,kBAACoG,GAAA,EAAD,CACEf,OACE,kBAACgB,GAAA,EAAD,CAAQF,aAAW,SAASvX,UAAWX,EAAQoX,QAA/C,KAIFnY,MAAOwB,EAAKxB,MACZoZ,UAAW5X,EAAK6X,aAElB,kBAACrX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KACzDZ,EAAK8X,gBC/ElB3Z,GAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,QACPC,OAAQ,QACRsC,MAAO,QACPuC,SAAU,WACVlE,eAAgB,SAChB6C,WAAY,UAGdwR,GAAI,CACFjV,MAAO,QACPC,OAAQ,OACRsC,MAAO,UACPpC,SAAU,OACVE,UAAW,UAEbiB,IAAI,CACFjB,UAAU,UAIC,SAASmY,GAAWzX,GAAa,IACtCC,EAAuBD,EAAvBC,SAAUgX,EAAajX,EAAbiX,SACZ/W,EAAUpB,KAF6B,EAGrBoE,qBAHqB,mBAGtCwV,EAHsC,KAGhCC,EAHgC,OAIzBzV,qBAJyB,mBAItC+H,EAJsC,KAIlC2N,EAJkC,OAKrB3U,IAAMf,UAAS,GALM,mBAKtC8S,EALsC,KAKhCC,EALgC,KAMvC4C,EAAkB,SAAC5G,GAAD,OAAgB,WACtC2G,EAAM3G,GACNgE,GAAQ,KAsCV,OAjCA3S,qBAAU,WACJ2T,GACF0B,EAAQ1B,EAASvW,KAAI,SAACC,EAAWsR,GAC/B,OAAQhS,GAAYgS,EAAQ,GAWxBhS,GAAYgS,EAAQ,EAVtB,kBAAC6G,GAAA,EAAD,CAAMvX,UAAU,MAAM6W,aAAW,uBAAuBtX,IAAKmR,GAC3D,kBAAC8G,GAAA,EAAD,KACE,kBAAC,KAAD,CAAQvW,QAASqW,EAAgB5G,IAC/B,kBAAC+G,GAAA,EAAD,KACE,kBAACV,GAAA,EAAD,OAEF,kBAACW,GAAA,EAAD,CAAc/Y,QAAS,CAACgZ,UAAUhZ,EAAQK,KAAK4Y,QAASxY,EAAKxB,MAAO+Z,UAAWvY,EAAK6X,gBAetF,WAGT,CAACvB,EAAUhX,IAMZ,yBAAKY,UAAWX,EAAQlB,MACtB,wBAAI6B,UAAWX,EAAQgU,IAAKjU,EAAW,2BAAS,iBAChD,6BAAMyY,GACN,kBAACU,GAAA,EAAD,CACEpD,KAAMA,EACNM,QA1Cc,WAClBL,GAAQ,IA0CJoD,kBAAgB,sBAChBC,mBAAiB,6BAEjB,kBAACC,GAAD,CAAUtO,GAAIA,EAAIgL,QAASA,M,0KC7E7BnX,GAAYC,aAAW,SAACyJ,GAAD,OAC3BsH,YAAa,CACX9Q,KAAM,CACJ+E,SAAU,QACVoC,OAAQ,MACRD,MAAOsC,EAAMuH,QAAQ,GACrBkB,OAAQ,KAEVuI,QAAS,CACPnJ,OAAQ,OACRvQ,OAAQ,QAMC,SAAS2Z,GAAgBzZ,GAAa,IAC3CC,EAAaD,EAAbC,SACFC,EAAUpB,KAFkC,EAKtBoE,oBAAS,GALa,mBAK3CwW,EAL2C,KAKnCC,EALmC,OAMtBzW,oBAAS,GANa,mBAM3C0W,EAN2C,KAMnCC,EANmC,OAOhB3W,oBAAS,GAPO,mBAO3C4W,EAP2C,KAOhCC,EAPgC,OAQxB7W,oBAAS,GARe,mBAQ3C8W,EAR2C,KAQpCC,EARoC,OASxB/W,oBAAS,GATe,mBAS3CgX,EAT2C,KASpCC,EAToC,OAUlBjX,mBAAwB,QAVN,mBAU3Ca,EAV2C,KAUjCqW,EAViC,OAcNlX,mBAAS,GAdH,mBAc3CmX,EAd2C,KAc3BC,EAd2B,KAgClD,OAjBAhX,qBAAU,WAERiX,OAAOC,iBAAiB,UAAU,WAChCF,EAAkBC,OAAOE,SACrBF,OAAOE,QAA+B,GAArBF,OAAOG,aAAqBH,OAAOE,QAA+B,IAArBF,OAAOG,aACvEf,GAAU,GACRY,OAAOE,QAA+B,IAArBF,OAAOG,aAAqBH,OAAOE,QAA+B,IAArBF,OAAOG,aACvEb,GAAU,GACRU,OAAOE,QAA+B,IAArBF,OAAOG,aAAqBH,OAAOE,QAA+B,IAArBF,OAAOG,aACvEX,GAAa,GACXQ,OAAOE,QAA+B,IAArBF,OAAOG,aAAqBH,OAAOE,QAA+B,IAArBF,OAAOG,aACvET,GAAS,GACPM,OAAOE,QAA+B,IAArBF,OAAOG,aAAqBH,OAAOE,QAA+B,IAArBF,OAAOG,aACvEP,GAAS,QAEZ,IAGD,yBAAKtZ,UAAWX,EAAQlB,MACtB,kBAAC2b,GAAA,EAAD,CACEza,QAAS,CAAEsZ,QAAStZ,EAAQsZ,SAC5BzO,MAAOhH,EACP6W,WAAS,EACTjL,SA3Bc,SAACrB,EAAsCvK,GACzDqW,EAAYrW,IA2BR1B,MAAO,CAAEM,gBAAiB0X,EAAsC,GAArBE,OAAOG,YAAoB,QAAU,cAAe9a,QAAS,OAAQ6C,cAAe,WAE/H,kBAACoY,GAAA,EAAD,CAASC,WAAY,EAAG3b,MAAOc,EAAW,eAAO,WAAY8a,UAAU,QACrE,kBAACC,GAAA,EAAD,CAAcjQ,MAAM,OAAO1I,MAAO,CAAEb,MAAO6Y,EAAsC,GAArBE,OAAOG,YAAoB,QAAU,sBAAwBlY,QAAS,WAAQ+X,OAAOU,SAAS,CAAEjV,IAAK,EAAGkV,SAAU,aAC5K,kBAAC,KAAD,QAGJ,kBAACL,GAAA,EAAD,CAASC,WAAY,EAAG3b,MAAOc,EAAW,2BAAS,QAAS8a,UAAU,QACpE,kBAACC,GAAA,EAAD,CAAcjQ,MAAM,QAAQ1I,MAAO,CAAEb,MAAO6Y,EAAsC,GAArBE,OAAOG,aAAqBL,EAAsC,IAArBE,OAAOG,YAAoB,QAAU,sBAAwBlY,QAAS,WAAQ+X,OAAOU,SAAS,CAAEjV,IAAKuU,OAAOG,YAAaQ,SAAU,aAC3O,kBAACC,GAAA,EAAD,CAAO3Z,MAAM,YAAY4Z,UAAW1B,EAAQ2B,aAAa,IAAI/Z,QAAQ,OACnE,kBAAC,KAAD,SAIN,kBAACuZ,GAAA,EAAD,CAASC,WAAY,EAAG3b,MAAOc,EAAW,2BAAS,QAAS8a,UAAU,QACpE,kBAACC,GAAA,EAAD,CAAcjQ,MAAM,QAAQ1I,MAAO,CAAEb,MAAO6Y,EAAsC,IAArBE,OAAOG,aAAqBL,EAAsC,IAArBE,OAAOG,YAAoB,QAAU,sBAAwBlY,QAAS,WAAQ+X,OAAOU,SAAS,CAAEjV,IAA0B,EAArBuU,OAAOG,YAAiBQ,SAAU,aAC/O,kBAACC,GAAA,EAAD,CAAO3Z,MAAM,YAAY4Z,UAAWxB,EAAQyB,aAAa,IAAI/Z,QAAQ,OACnE,kBAAC,KAAD,SAIN,kBAACuZ,GAAA,EAAD,CAASC,WAAY,EAAG3b,MAAOc,EAAW,2BAAS,WAAY8a,UAAU,QACvE,kBAACC,GAAA,EAAD,CAAcjQ,MAAM,WAAW1I,MAAO,CAAEb,MAAO6Y,EAAsC,IAArBE,OAAOG,aAAqBL,EAAsC,IAArBE,OAAOG,YAAoB,QAAU,sBAAwBlY,QAAS,WAAQ+X,OAAOU,SAAS,CAAEjV,IAA0B,EAArBuU,OAAOG,YAAiBQ,SAAU,aAClP,kBAACC,GAAA,EAAD,CAAO3Z,MAAM,YAAY4Z,UAAWtB,EAAWuB,aAAa,IAAI/Z,QAAQ,OACtE,kBAAC,KAAD,SAIN,kBAACuZ,GAAA,EAAD,CAASC,WAAY,EAAG3b,MAAOc,EAAW,kCAAW,OAAQ8a,UAAU,QACrE,kBAACC,GAAA,EAAD,CAAcjQ,MAAM,OAAO1I,MAAO,CAAEb,MAAO6Y,EAAsC,IAArBE,OAAOG,aAAqBL,EAAsC,IAArBE,OAAOG,YAAoB,QAAU,sBAAwBlY,QAAS,WAAQ+X,OAAOU,SAAS,CAAEjV,IAA0B,EAArBuU,OAAOG,YAAiBQ,SAAU,aAC9O,kBAACC,GAAA,EAAD,CAAO3Z,MAAM,YAAY4Z,UAAWpB,EAAOqB,aAAa,IAAI/Z,QAAQ,OAClE,kBAAC,KAAD,SAIN,kBAACuZ,GAAA,EAAD,CAASC,WAAY,EAAG3b,MAAOc,EAAW,eAAO,OAAQ8a,UAAU,QACjE,kBAACC,GAAA,EAAD,CAAcjQ,MAAM,OAAO1I,MAAO,CAAEb,MAAO6Y,EAAsC,IAArBE,OAAOG,aAAqBL,EAAsC,IAArBE,OAAOG,YAAoB,QAAU,sBAAwBlY,QAAS,WAAQ+X,OAAOU,SAAS,CAAEjV,IAA0B,EAArBuU,OAAOG,YAAiBQ,SAAU,aAC9O,kBAACC,GAAA,EAAD,CAAO3Z,MAAM,YAAY4Z,UAAWlB,EAAOmB,aAAa,IAAI/Z,QAAQ,OAClE,kBAAC,KAAD,W,4CC1GOga,G,oDACnB,WAAYtb,GAAa,IAAD,+BACtB,cAAMA,IACDub,MAAQ,CAAEC,UAAU,GAFH,E,+DAUNC,EAAYC,GAC5BC,QAAQC,IAAIH,EAAOC,K,+BAInB,OAAI9N,KAAK2N,MAAMC,SAGX,yBAAKnZ,MAAO,CAAEnD,OAAQ,QAASD,MAAO,QAASW,QAAS,OAAQC,eAAgB,SAAU6C,WAAY,WACpG,+EAKCkL,KAAK5N,MAAM6b,Y,gDAnBYJ,GAE9B,MAAO,CAAED,UAAU,O,GARiBM,aCElChd,GAAYC,aAAW,SAAAyJ,GAAK,MAAK,CACnCxJ,KAAM,CACJY,QAAS,OACT,YAAa,CACXiJ,WAAYL,EAAMuH,QAAQ,SAanBgM,GATC,WACZ,IAAM7b,EAAUpB,KAEhB,OACE,yBAAK+B,UAAWX,EAAQlB,MACtB,kBAAC4E,EAAA,EAAD,QCXOiT,GAJF,uCAAG,4BAAA/K,EAAA,sEACSgL,MAAMF,GAAQ,QAAQG,MAAK,SAAAhI,GAAC,OAAIA,EAAEiI,UAD3C,cACR9S,EADQ,yBAELA,GAFK,2CAAH,qDCaE2S,GAbF,uCAAG,4BAAA/K,EAAA,sEACSgL,MAAMF,GAAU,YAAYG,MAAK,SAAAhI,GAAC,OAAIA,EAAEiI,UADjD,cACR9S,EADQ,yBAGLA,GAHK,2CAAH,qDCKE2S,GALF,uCAAG,4BAAA/K,EAAA,sEACSgL,MAAMF,GAAU,cAAcG,MAAK,SAAAhI,GAAC,OAAIA,EAAEiI,UADnD,cACR9S,EADQ,yBAGLA,GAHK,2CAAH,qDCKE2S,GALF,uCAAG,4BAAA/K,EAAA,sEACSgL,MAAMF,GAAU,aAAaG,MAAK,SAAAhI,GAAC,OAAIA,EAAEiI,UADlD,cACR9S,EADQ,yBAGLA,GAHK,2CAAH,qDCKE2S,GALF,uCAAG,4BAAA/K,EAAA,sEACSgL,MAAMF,GAAU,iBAAiBG,MAAK,SAAAhI,GAAC,OAAIA,EAAEiI,UADtD,cACR9S,EADQ,yBAGLA,GAHK,2CAAH,qDCsBP8X,GAAO/X,IAAMgY,MAAK,kBAAM,uDAExBnd,GAAYC,aAAW,SAAAyJ,GAAK,MAAK,CACrCxJ,KAAM,CACJ8D,WAAY,iBAEdoZ,OAAQ,CACNnY,SAAU,WACViC,IAAK,OACLC,KAAM,QAERkW,SAAU,CACRlL,OAAQzI,EAAMyI,OAAOmL,OAAS,GAEhCC,SAAU,CACRtY,SAAU,QACVmC,MAAO,OACPF,IAAK,YAILsW,GAA0C,KAApCna,aAAaoa,QAAQ,YAiGhBC,OAhGf,WACE,IAAMtc,EAAUpB,KADH,EAEWoE,oBAAS,GAFpB,mBAEN8S,EAFM,KAEAC,EAFA,OAGmB/S,mBAASuZ,QAAQH,KAHpC,mBAGNrc,EAHM,KAGI6B,EAHJ,OAIyBoB,oBAAS,GAJlC,mBAIND,EAJM,KAIOyZ,EAJP,OAKmBxZ,qBALnB,mBAKNgB,EALM,KAKIyY,EALJ,OAMqBzZ,qBANrB,mBAMNwO,EANM,KAMKkL,EANL,OAOiB1Z,qBAPjB,mBAONiB,EAPM,KAOG0Y,EAPH,OAQmB3Z,mBAAS,IAR5B,mBAQN+T,EARM,KAQI6F,EARJ,OASqB5Z,qBATrB,mBASNuB,EATM,KASKsY,EATL,OAUmB7Z,qBAVnB,mBAUN+F,EAVM,KAUI+T,EAVJ,OAW2B9Z,qBAX3B,mBAWNmP,EAXM,KAWQ4K,EAXR,KAmDb,OAjCA3Z,qBAAU,YACO,uCAAG,8BAAAwI,EAAA,sEACCoR,KADD,cACZhb,EADY,OAEhBya,EAAYza,GAGZib,GADIA,EAAgBjb,EAAKyD,QAAQmJ,QAAO,SAACjH,GAAD,MAAgD,iBAAnBA,EAAG/C,aAAiD,iBAAzB+C,EAAGmK,sBACrElD,QAAO,SAACjH,GAAD,YAAoBqH,IAAPrH,KAClD+U,EAAaO,GAIbjb,GAHAA,EAAOA,EAAKyD,QAAQmJ,QAAO,SAACjH,GAAD,MACN,iBAAnBA,EAAG/C,aAAiD,iBAAzB+C,EAAGmK,sBAEpBlD,QAAO,SAACjH,GAAD,YAAoBqH,IAAPrH,KAChC+U,EAAa1a,GAXG,UAaHkb,KAbG,eAahBlb,EAbgB,OAchB2a,EAAW3a,GAdK,UAgBHmb,KAhBG,eAgBhBnb,EAhBgB,OAiBhB6a,EAAa7a,GAjBG,UAmBHob,KAnBG,eAmBhBpb,EAnBgB,OAoBhB8a,EAAY9a,EAAKyD,SApBD,UAsBH4X,KAtBG,eAsBhBrb,EAtBgB,OAuBhB+a,EAAgB/a,GAvBA,UAyBH2V,KAzBG,QAyBhB3V,EAzBgB,OA0BhB4a,EAAY5a,EAAKyD,SAEjB2N,YAAW,kBAAMoJ,GAAe,KAAO,GA5BvB,4CAAH,qDA8Bf3E,KACC,IAED,yBAAKlX,UAAWX,EAAQlB,MACtB,yBAAK6B,UAAWX,EAAQgc,QACtB,kBAAC,IAAD,CACEta,KAAK,yDACL4b,oBAAkB,kDAClBC,YAAU,QACVC,mBAAiB,EACjBtF,aAAW,sDALb,SASF,kBAACqB,GAAD,CAAiBxZ,SAAUA,IAE3B,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAU6B,YAAaA,EAAa7B,SAAUA,EAAUgD,YAAaA,KAEvE,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAehD,SAAUA,EAAUgJ,SAAUA,EAAUxE,UAAWA,EAAWN,QAASA,EAASD,SAAUA,KAE3G,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOmO,aAAcA,EAAcpS,SAAUA,EAAUyR,UAAWA,KAEpE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAUzR,SAAUA,EAAUyR,UAAWA,KAE3C,kBAAC,GAAD,KACE,kBAAC,WAAD,CAAUiM,SAAU,kBAAC,GAAD,OAClB,kBAAC3B,GAAD,CAAM/b,SAAUA,EAAUyR,UAAWA,MAGzC,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAYuF,SAAUA,EAAUhX,SAAUA,KAE9C,kBAACyB,EAAA,EAAD,CAAQJ,QAAQ,WAAWE,MAAM,UAAUgB,QAtE1B,WACnByT,GAASD,IAqE2DnV,UAAWX,EAAQmc,UAClFpc,EAAW,2BAAS,YAEvB,kBAAC2d,EAAA,EAAD,CAAU/c,UAAWX,EAAQic,SAAUnG,KAAMA,EAAMxT,QA5EnC,WAClByT,GAAQ,KA4EJ,kBAAC,EAAD,CAAYhW,SAAUA,OC3HVwc,QACW,cAA7BlC,OAAOsD,SAASC,UAEe,UAA7BvD,OAAOsD,SAASC,UAEhBvD,OAAOsD,SAASC,SAASC,MACvB,2DCXNC,IAASvT,OAAO,kBAAC,GAAD,MAAQsC,SAASkR,eAAe,SDoI1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrH,MAAK,SAAAsH,GACJA,EAAaC,gBAEdC,OAAM,SAAA9C,GACLE,QAAQF,MAAMA,EAAM+C,c","file":"static/js/main.e6672245.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles({\n  root: {\n    width: '100vw',\n    height: '100vh'\n  },\n  title: {\n    fontSize: '35px',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  root1: {\n    minWidth: 200,\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n  cards: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    margin: '20vh auto'\n  }\n});\n\nconst Memberpage = (props: any) => {\n  const { language } = props;\n  const classes = useStyles();\n  const peopleData: object[] = [\n    {\n      img:'/lkc.jpg',\n      name: '李康诚',\n      enName: 'Kangcheng Li',\n      des: '数据库管理员',\n      enDes: 'database manager',\n      link: 'https://github.com/lkczn'\n    },\n    {\n      img:'/gs.jpg',\n      name: '郭帅',\n      enName: 'Shuai Guo',\n      des: '运维工程师',\n      enDes: 'packege engineer',\n      link: 'https://github.com/loveisever'\n    },\n    {\n      img:'/gsw.jpg',\n      name: '高士玮',\n      enName: 'Shiwei Gao',\n      des: '后端工程师',\n      enDes: 'back-end engineer',\n      link: 'https://github.com/shituweian'\n    },\n    {\n      img:'/xww.jpg',\n      name: '肖文伟',\n      enName: 'Wenwei Xiao',\n      des: '前端工程师',\n      enDes: 'front-end engineer',\n      link: 'https://github.com/xiao-wenwei'\n    },\n    {\n      img:'/pzz.jpg',\n      name: '彭奏章',\n      enName: 'Zouzhang Peng',\n      des: '前端工程师',\n      enDes: 'front-end engineer',\n      link: 'https://github.com/GiorgioPeng'\n    }\n  ]\n  const card: JSX.Element[] = peopleData.map((item: any) =>\n    <Card className={classes.root1} key={item.name}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={process.env.PUBLIC_URL + item.img}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          {language ?\n            <>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {item.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {item.des}\n              </Typography>\n            </>\n            :\n            <>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {item.enName}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {item.enDes}\n              </Typography>\n            </>\n          }\n\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"large\" variant=\"contained\" color=\"primary\">\n          <a href={item.link}>{language ? '我的github' : 'My github'}</a>\n        </Button>\n      </CardActions>\n    </Card>)\n  return (\n    <div className={classes.root}>\n      <p className={classes.title}>{language ? '欢迎来到我们的新冠肺炎可视化系统' : \"Welcome to our covid-19 visualization system\"}</p>\n      <div className={classes.cards}>{card}</div>\n    </div>\n  )\n}\n\nexport default Memberpage\n","import React , { useCallback } from 'react'\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nfunction LanguageChoose(props:any) {\n    const { language,setLanguage,showHint } = props;\n\n    const setLocal = useCallback((data) => {\n        setLanguage(data)\n        const language = data ? \"1\" : \"2\"\n        localStorage.setItem('language', language);\n    }, [])\n\n    return (            \n    <div style={{ opacity: showHint ? 1 : 0 }}>\n        <ButtonGroup color=\"primary\">\n            <Button variant={language?'contained':'outlined'} onClick={()=>setLocal(true)}>中文</Button>\n            <Button variant={!language?'contained':'outlined'} onClick={()=>setLocal(false)}>English</Button>\n        </ButtonGroup>\n        </div>\n    )\n}\n\nexport default LanguageChoose\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LanguageChoose from '../components/LanguageChoose'\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'black',\n        '& p': {\n            fontSize: '45px',\n            color: 'white',\n            textAlign: 'center',\n            width: '70vw'\n        }\n    },\n    load: {\n        height: '60vh',\n        width: '60vw',\n        margin: '20vh auto',\n        color: 'white',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n    },\n    hint: {\n        textAlign: 'center',\n        color: 'white',\n        transition: '1s linear all',\n        marginBottom: '3vh'\n    }\n})\nfunction Homepage(props: any) {\n    const { displayText, language, setLanguage } = props//用于判断是否开始显示文字动画\n    const displayString = \"这是一场前所未有的’战疫‘,也是一场全人类的挑战,没有任何人可以置身事外.\"\n    const [str, setStr] = useState('')\n    const [showHint, setShowHint] = useState(false)\n    const classes = useStyles();\n    useEffect(() => {\n        let i = 1;\n        let disStr = () => {\n            setStr(displayString.substr(0, i++))//逐步显示文字\n            if (i !== displayString.length + 1) {\n                requestAnimationFrame(disStr);\n            }\n            else {\n                setShowHint(true);//显示提示框\n            }\n        };\n        if (displayText)//如果全部加载完成,开始显示文字\n            disStr();\n    }, [displayText])\n    useEffect(() => { }, [language])\n    return (\n        <div className={classes.root}>\n            {\n                displayText ?\n                    <p>{language ? str : 'This is a unprecedented epidemic, a challenge for all mankind, nobody can escape.'}</p>\n                    :\n                    <div className={classes.load}>\n                        <CircularProgress size={90} thickness={6} />\n                        <div>数据请求中,请等待....</div>\n                        <div>Data loading.... Please wait....</div>\n                    </div>\n            }\n            <div className={classes.hint} style={{ opacity: showHint ? 1 : 0 }}>{language ? '下滑了解更多' : 'Slide to learn more'}⬇️</div>\n            <div className={classes.hint} style={{ opacity: showHint ? 1 : 0 }}>{language ? '右侧按钮可以快速换页' : 'The right button can quickly change the page'}➡️</div>\n            <LanguageChoose setLanguage={setLanguage} language={language} showHint={showHint} />\n        </div>\n    )\n}\n\nexport default Homepage\n","import {\n  LayerEvent,\n  LineLayer,\n  MapboxScene,\n  PointLayer,\n  PolygonLayer,\n  Popup,\n} from '@antv/l7-react';\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import areaData from '../../../assets/areaData'\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  mapBg: {\n    height: '70vh',\n    width: '80vw',\n    position: 'relative',\n    backgroundColor: 'skyblue'\n  }\n});\nfunction joinData(geodata: any, ncovData: any) {\n  const ncovDataObj: any = {};\n  ncovData.forEach((item: any) => {\n    const {\n      countryName,\n      countryEnglishName,\n      currentConfirmedCount,\n      confirmedCount,\n      suspectedCount,\n      curedCount,\n      deadCount,\n    } = item;\n    if (countryName === '中国') {\n      if (!ncovDataObj[countryName]) {\n        ncovDataObj[countryName] = {\n          countryName: 0,\n          countryEnglishName,\n          currentConfirmedCount: 0,\n          confirmedCount: 0,\n          suspectedCount: 0,\n          curedCount: 0,\n          deadCount: 0,\n        };\n      } else {\n        ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\n        ncovDataObj[countryName].confirmedCount += confirmedCount;\n        ncovDataObj[countryName].suspectedCount += suspectedCount;\n        ncovDataObj[countryName].curedCount += curedCount;\n        ncovDataObj[countryName].deadCount += deadCount;\n      }\n    } else {\n      ncovDataObj[countryName] = {\n        countryName,\n        countryEnglishName,\n        currentConfirmedCount,\n        confirmedCount,\n        suspectedCount,\n        curedCount,\n        deadCount,\n      };\n    }\n  });\n  const geoObj: any = {};\n  geodata.features.forEach((feature: any) => {\n    const { name } = feature.properties;\n    geoObj[name] = feature.properties;\n    const ncov = ncovDataObj[name] || {};\n    feature.properties = {\n      ...feature.properties,\n      ...ncov,\n    };\n  });\n  return geodata;\n}\n\nconst World = React.memo(function Map(props: any) {\n  const classes = useStyles();\n  const { language, areaData, world2D } = props;\n  const [data, setData] = React.useState();\n  const [filldata, setfillData] = React.useState();\n  const [popupInfo, setPopupInfo] = React.useState<{\n    lnglat: number[];\n    feature: any;\n  }>();\n  React.useEffect(() => {\n\n    // const [geoData, ncovData] = await Promise.all([\n    //   fetch(\n    //     'https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json',\n    //   ).then((d) => d.json()),\n    //   fetch('https://lab.isaaclin.cn/nCoV/api/area?latest=1').then((d) =>\n    //     d.json(),\n    //   ),\n    // ]);\n\n\n  \n  if (areaData && world2D) {\n    const geoData = world2D\n    const ncovData = areaData;\n\n\n\n    const worldData = joinData(geoData, ncovData.results);\n    const pointdata = worldData.features.map((feature: any) => {\n      return feature.properties;\n    });\n    setfillData(worldData)\n    setData(pointdata)\n  }\n\n}, [areaData, world2D]);\nfunction showPopup(args: any): void {\n  setPopupInfo({\n    lnglat: args.lngLat,\n    feature: args.feature,\n  });\n}\n\nreturn (\n  <div className={classes.root}>\n    <h1>{language ? '世界概况(支持缩放和拖动)' : 'World Factbook (supports zooming and dragging)'} </h1>\n    <div className={classes.mapBg}>\n      <MapboxScene\n        map={{\n          center: [110.19382669582967, 50.258134],\n          pitch: 0,\n          style: 'blank',\n          zoom: 1,\n        }}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      >\n        {popupInfo && (\n          <Popup lnglat={popupInfo.lnglat}>\n            {language ? popupInfo.feature.name : popupInfo.feature.countryEnglishName}\n            <ul\n              style={{\n                margin: 0,\n              }}\n            >\n              <li>{(language ? '现有确诊: ' : 'current confirm: ') + popupInfo.feature.currentConfirmedCount}</li>\n              <li>{(language ? '累计确诊: ' : 'total confirm: ') + popupInfo.feature.confirmedCount}</li>\n              <li>{(language ? '治愈: ' : 'cure count: ') + popupInfo.feature.curedCount}</li>\n              <li>{(language ? '死亡: ' : 'dead count: ') + popupInfo.feature.deadCount}</li>\n            </ul>\n          </Popup>\n        )}\n        {data && [\n          <PolygonLayer\n            key={'1'}\n            options={{\n              autoFit: false,\n            }}\n            source={{\n              data: filldata,\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'quantile',\n                },\n              },\n            }}\n            color={{\n              values: '#bbb',\n            }}\n            shape={{\n              values: 'fill',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n          <LineLayer\n            key={'3'}\n            source={{\n              data: filldata,\n            }}\n            size={{\n              values: 0.6,\n            }}\n            color={{\n              values: '#89f',\n            }}\n            shape={{\n              values: 'line',\n            }}\n            style={{\n              opacity: 1,\n            }}\n          />,\n          <PointLayer\n            key={'2'}\n            options={{\n              autoFit: true,\n            }}\n            source={{\n              data,\n              parser: {\n                type: 'json',\n                coordinates: 'centroid',\n              },\n            }}\n            scale={{\n              values: {\n                confirmedCount: {\n                  type: 'log',\n                },\n              },\n            }}\n            color={{\n              values: '#b10026',\n            }}\n            shape={{\n              values: 'circle',\n            }}\n            active={{\n              option: {\n                color: '#0c2c84',\n              },\n            }}\n            size={{\n              field: 'confirmedCount',\n              values: [5, 60],\n            }}\n            animate={{\n              enable: true,\n            }}\n            style={{\n              opacity: 0.6,\n            }}\n          >\n            <LayerEvent type=\"mousemove\" handler={showPopup} />\n          </PointLayer>,\n        ]}\n      </MapboxScene>\n    </div>\n  </div>\n);\n});\nexport default World;","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\n// import areaData from '../../../assets/areaData';\nconst useStyle = makeStyles({\n    root: {\n        padding: '5px',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'space-around',\n        justifyContent: 'space-around',\n        fontSize: '16px',\n        overflow: 'scroll',\n        backgroundColor: 'white',\n        '& p': {\n            margin: 0\n        }\n    }\n})\nconst DetailCard = (props: any) => {\n    const { language, countryData } = props;\n    const classes = useStyle();\n\n    //将时间戳转化成当前时间\n    function getTime(time: any) {\n        let date = new Date(time);\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n        let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n        let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n        let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n        return Y + M + D + h + m + s;\n    }\n\n\n    useEffect(() => {\n        //console.log(countryData)\n    }, [countryData])\n\n    return (\n        <div className={classes.root}>\n            {countryData ? Object.keys(countryData).map((el: any) => {\n                switch (el) {\n                    case \"countryName\":\n                        return language ? <p key={el}>{`国家名称: ${countryData[el]}`}</p> : ''\n                    case \"countryEnglishName\":\n                        return language ? '' : <p key={el}>{`country name: ${countryData[el]}`}</p>\n                    case \"currentConfirmedCount\":\n                        return <p key={el}>{`${language ? '当前确诊数: ' : 'current confirmed count: '}${countryData[el]}`}</p>\n                    case \"confirmedCount\":\n                        return <p key={el}>{`${language ? '累计确诊数: ' : 'confirmed count: '}${countryData[el]}`}</p>\n                    case \"suspectedCount\":\n                        return <p key={el}>{`${language ? '疑似数: ' : 'suspected count: '}${countryData[el]}`}</p>\n                    case \"curedCount\":\n                        return <p key={el}>{`${language ? '治愈数: ' : 'cured count: '}${countryData[el]}`}</p>\n                    case \"deadCount\":\n                        return <p key={el}>{`${language ? '死亡数: ' : 'dead count: '}${countryData[el]}`}</p>\n                    case \"updateTime\":\n                        return <p key={el}>{`${language ? '更新时间: ' : 'update time: '}${getTime(countryData[el] ? countryData[el] : (new Date().getTime()))}`}</p>\n                    default:\n                        return ''\n                }\n            }) : <p style={{ textAlign: 'center' }}>{language ? '未选择国家或当前国家数据缺失' : 'Please choose a country or data of country loss'}</p>}\n        </div>\n    )\n}\nexport default DetailCard","import React from 'react'\nimport { useEffect, useState } from 'react';\nimport red from '@material-ui/core/colors/red';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as d3 from \"d3\";\nimport * as topojson from 'topojson';\n// import worldData from '../../../assets/worldData.json'\nimport versor from 'versor';\n// import areaData from '../../../assets/areaData'\n// import tsv2json from '../../../assets/tsv2json.json'\nimport DetailCard from './DetailCard';\nconst useStyles = makeStyles(theme => ({\n    globe: {\n        cursor: 'move',\n    }\n    ,\n    current: {\n        position: 'absolute',\n        color: 'white',\n        fontFamily: 'sans - serif',\n        marginLeft: '4 %',\n        marginTop: '4 %'\n    },\n    card: {\n        position: 'absolute',\n        right: '0',\n        bottom: '0',\n        width: '300px',\n        height: '300px'\n    }\n}))\nfunction Earth(props) {\n    const [countryData, setCountryData] = useState()\n    const { areaData, language, tsv2json, worldData } = props;\n    const classes = useStyles();\n    const getColor = (value) => {\n        if (value < 500) {\n            return red[50]\n        }\n        else {\n            if (value < 1000) {\n                return red[100]\n            }\n            else {\n                if (value < 5000) {\n                    return red[200]\n                }\n                else {\n                    if (value < 10000) {\n                        return red[400]\n                    }\n                    else {\n                        if (value < 20000) {\n                            return red[600]\n                        }\n                        else {\n                            return red[900]\n                        }\n                    }\n                }\n            }\n        }\n    }\n    useEffect(() => {\n        //\n        // Configuration\n        //\n\n        // 地球拖动后再次自动旋转的延时\n        let rotationDelay = 3000\n        // scale of the globe (not the canvas element)\n        let scaleFactor = 0.9\n        // 每秒钟自动旋转的角度\n        let degPerSec = 6\n        // 开始的角度\n        let angles = { x: -20, y: 40, z: 0 }\n        // 颜色\n        let colorWater = 'skyblue'\n        let colorLand = '#111'\n        let colorGraticule = 'skyblue'\n        let colorCountry = '#a00'\n\n\n        //\n        // Handler\n        //\n\n        //鼠标进入某个国家\n        function enter(country) {\n            country = countryList.find(function (c) {\n                return c.id === country.id\n            })\n            //console.log(country && country.name || '')\n            let temp = areaData.results.filter((e) => e.countryEnglishName === (country && country.name || '') && e.provinceEnglishName === (country && country.name || ''))\n            //console.log(temp)\n            setCountryData(temp[0])\n        }\n\n        //鼠标离开\n        function leave(country) {\n            current.text('')\n        }\n\n        //\n        // Variables\n        //\n\n        // 设置当前选中国家的名称\n        let current = d3.select('#current')\n        // 地球3d模型\n        let canvas = d3.select('#globe')\n        let context = canvas.node().getContext('2d')\n\n        let water = { type: 'Sphere' }\n\n        // 设置投影精度\n        let projection = d3.geoOrthographic().precision(0.1)\n\n        // 生成10度划分度几何体\n        let graticule = d3.geoGraticule10()\n\n        // 使用默认设置创建新的地理路径生成器。设置当前投影。设置当前上下文。\n        let path = d3.geoPath(projection).context(context)\n        let v0 // 鼠标在拖动手势开始时的笛卡尔坐标位置。\n        let r0 // 投影旋转作为欧拉角在开始。\n        let q0 // 投影旋转作为versor的开始。\n\n        //得到当前时间\n        let lastTime = d3.now()\n\n        // 每毫秒旋转角度\n        let degPerMs = degPerSec / 1000\n\n        // 画布的宽高\n        let width, height\n\n        // land 包含的是所有大陆的绘制路径,countries 包含的是所有国家的绘制路径\n        let land, countries\n\n        //国家列表\n        let countryList\n\n        let autorotate, now, diff, rotation\n\n        //当前选中的国家\n        let currentCountry\n\n        //\n        // Functions\n\n        function setAngles() {\n            // 设置旋转角度\n            rotation = projection.rotate()\n            rotation[0] = angles.y\n            rotation[1] = angles.x\n            rotation[2] = angles.z\n            projection.rotate(rotation)\n        }\n\n        function scale() {\n            // 设置画布大小为屏幕大小\n            width = document.documentElement.clientWidth\n            height = document.documentElement.clientHeight\n            canvas.attr('width', width).attr('height', height)\n\n            projection\n                .scale((scaleFactor * Math.min(width, height)) / 2) //缩放为正方形\n                .translate([width / 2, height / 2]) //移动投影中心\n            render()\n        }\n\n        function startRotation(delay) {\n            autorotate.restart(rotate, delay || 0)\n        }\n\n        function stopRotation() {\n            autorotate.stop()\n        }\n\n        function dragstarted() {\n            v0 = versor.cartesian(projection.invert(d3.mouse(this)))\n            r0 = projection.rotate()\n            q0 = versor(r0)\n            stopRotation()\n        }\n\n        function dragged() {\n            let v1 = versor.cartesian(projection.rotate(r0).invert(d3.mouse(this)))\n            let q1 = versor.multiply(q0, versor.delta(v0, v1))\n            let r1 = versor.rotation(q1)\n            projection.rotate(r1)\n            render()\n        }\n\n        function dragended() {\n            startRotation(rotationDelay)\n        }\n\n        function render() {\n            // 清除画布内容\n            context.fillStyle = '#fff9c4';\n            context.fillRect(0, 0, width, height)\n\n            // 填充水\n            fill(water, colorWater)\n            stroke(graticule, colorGraticule)\n            fill(land, \"white\")\n            stroke(countries, \"black\")\n\n            // 对每个国家通过获取名字,再获取感染人数,最后上色\n            countries.features.forEach(el => {\n                let color;\n                let name;\n                name = countryList.find((value) => parseInt(value.id) === parseInt(el.id))\n                name = name ? name.name : '';\n                if (!name)\n                    return\n                let confirm = areaData.results.find(f => f.provinceEnglishName === name)\n                confirm = confirm ? confirm.confirmedCount : '';\n                if (!confirm)\n                    return\n                color = getColor(confirm)\n                fill(el, color)\n            })\n\n            // countries.features.find(f =>\n            //     f.geometry.coordinates.find(c1 =>\n            //         polygonContains(c1, pos)\n            //         ||\n            //         c1.find(c2 =>\n            //             polygonContains(c2, pos)\n            //         )\n            //     )\n            // )\n\n            if (currentCountry) {\n                fill(currentCountry, \"#9ccc65\")\n            }\n        }\n\n        function fill(obj, color) {\n            context.beginPath()\n            path(obj)\n            context.fillStyle = color\n            context.fill()\n        }\n\n        function stroke(obj, color) {\n            context.beginPath()\n            path(obj)\n            context.strokeStyle = color\n            context.stroke()\n        }\n\n        function rotate(elapsed) {\n            now = d3.now()\n            diff = now - lastTime\n            if (diff < elapsed) {\n                rotation = projection.rotate()\n                rotation[0] += diff * degPerMs\n                projection.rotate(rotation)\n                render()\n            }\n            lastTime = now\n        }\n\n        const loadData = async (cb) => {\n            // let temp = []\n            // await d3.tsv('https://gist.githubusercontent.com/mbostock/4090846/raw/07e73f3c2d21558489604a0bc434b3a5cf41a867/world-country-names.tsv', function (countries) {\n            //     temp.push(countries)\n            // })\n            // //console.log(temp)\n            cb(worldData, tsv2json)\n\n        }\n\n        // https://github.com/d3/d3-polygon\n        function polygonContains(polygon, point) {\n            let n = polygon.length\n            let p = polygon[n - 1]\n            let x = point[0], y = point[1]\n            let x0 = p[0], y0 = p[1]\n            let x1, y1\n            let inside = false\n            for (let i = 0; i < n; ++i) {\n                p = polygon[i];\n                x1 = p[0];\n                y1 = p[1];\n                if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside\n                x0 = x1;\n                y0 = y1\n            }\n            return inside\n        }\n\n        function mousemove() {\n            let c = getCountry(this)\n\n            // 如果没有选中\n            if (!c) {\n                if (currentCountry) {\n                    leave(currentCountry)\n                    currentCountry = undefined\n                    render()\n                }\n                return\n            }\n            // 选中国家没有改变\n            if (c === currentCountry) {\n                return\n            }\n            currentCountry = c\n\n            // //console.log(countryList.find(el=>parseInt(el.id)===parseInt(c.id)).name)\n            render()\n            enter(c)\n        }\n\n        // 得到当前选中的国家\n        function getCountry(event) {\n            let pos = projection.invert(d3.mouse(event))\n            return countries.features.find(f =>\n                f.geometry.coordinates.find(c1 =>\n                    polygonContains(c1, pos)\n                    ||\n                    c1.find(c2 =>\n                        polygonContains(c2, pos)\n                    )\n                )\n            )\n        }\n\n\n        //\n        // Initialization\n        //\n\n        setAngles()\n\n        if (areaData&&tsv2json&&worldData)\n            loadData(function (world, cList) {\n                land = topojson.feature(world, world.objects.land)\n                countries = topojson.feature(world, world.objects.countries)\n                countryList = cList\n                // window.addEventListener('resize', scale)\n                scale()\n                autorotate = d3.timer(rotate)\n            })\n\n        canvas\n            .call(d3.drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended)\n            )\n            .on('mousemove', mousemove)\n        // .on('click',()=>{\n        //     let country = getCountry(this)\n        //     country = countryList.find(function (c) {\n        //         return c.id === country.id\n        //     })\n        //     //console.log(country && country.name || '')\n        //     let temp = areaData.results.filter((e) => e.countryEnglishName === (country && country.name || '') && e.provinceEnglishName === (country && country.name || ''))\n        //     //console.log(temp)\n        //     setCountryData(temp[0])\n        // })\n\n    }, [areaData, tsv2json, worldData])\n    return (\n        <div style={{ height: '100vh', width: '100vw', position: 'relative' }}>\n            <h2 id=\"current\" className={classes.current}></h2>\n            <canvas id=\"globe\" className={classes.globe}></canvas>\n            <div className={classes.card}>\n                <DetailCard language={language} areaData={areaData} countryData={countryData} />\n            </div>\n        </div>\n    )\n}\n\nexport default Earth\n","import React from 'react';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\n\nfunction SwitchV(props:any) {\n    const { display3D, setDisplay3D } = props\n\n    const handleChange = () => {\n        setDisplay3D(!display3D);\n    };\n\n    return (\n        <FormGroup>\n            <FormControlLabel\n                control={<IOSSwitch checked={display3D} onChange={handleChange} name=\"display3D\" />}\n                label=\"3D\"\n            />\n        </FormGroup>\n    );\n}\n\nexport default SwitchV;\n\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\n    focusVisible?: string;\n}\n\ninterface Props extends SwitchProps {\n    classes: Styles;\n}\n\nconst IOSSwitch = withStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: 42,\n            height: 26,\n            padding: 0,\n            margin: theme.spacing(1),\n        },\n        switchBase: {\n            padding: 1,\n            '&$checked': {\n                transform: 'translateX(16px)',\n                color: theme.palette.common.white,\n                '& + $track': {\n                    backgroundColor: '#52d869',\n                    opacity: 1,\n                    border: 'none',\n                },\n            },\n            '&$focusVisible $thumb': {\n                color: '#52d869',\n                border: '6px solid #fff',\n            },\n        },\n        thumb: {\n            width: 24,\n            height: 24,\n        },\n        track: {\n            borderRadius: 26 / 2,\n            border: `1px solid ${theme.palette.grey[400]}`,\n            backgroundColor: theme.palette.grey[50],\n            opacity: 1,\n            transition: theme.transitions.create(['background-color', 'border']),\n        },\n        checked: {},\n        focusVisible: {},\n    }),\n)(({ classes, ...props }: Props) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport TwoD from '../componens/2D'\nimport ThreeD from '../componens/3D'\nimport SwithV from '../componens/SwitchV'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ScrollReveal from 'scrollreveal'\n\nconst useStyle = makeStyles({\n    root: {\n        height: '100vh',\n        width: '100vw',\n        position: 'relative',\n    },\n    switchV: {\n        position: 'absolute',\n        top: '2px',\n        left: '10px',\n        zIndex: 5,\n    }\n})\nfunction International(props: any) {\n    const { language, areaData, world2D, tsv2json, worldData } = props;\n    const [display3D, setDisplay3D] = useState(false)\n    const classes = useStyle();\n    useEffect(() => {\n        ScrollReveal().reveal(\".international\", {\n            duration: 2000,\n            distance: '0px',\n            reset: true,\n            rotate: {\n                x: -100,\n                z: -50\n            }\n        })\n    }, [])\n    return (\n        <div className={classes.root + ' international'}>\n\n            <div className={classes.switchV}>\n                <SwithV display3D={display3D} setDisplay3D={setDisplay3D} />\n            </div>\n            <div style={{ display: display3D ? 'none' : 'block', height: '100vh', width: '100vw' }}>\n                <TwoD world2D={world2D} areaData={areaData} language={language} />\n            </div>\n            <div style={{ display: display3D ? 'block' : 'none', height: '100vh', width: '100vw' }}>\n                <ThreeD areaData={areaData} worldData={worldData} tsv2json={tsv2json} language={language} />\n            </div>\n        </div>\n    )\n}\n\nexport default International\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n// import areaData from '../../../assets/areaData';\nconst useStyle = makeStyles({\n  root: {\n    padding: '5px',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    fontSize: '20px'\n  },\n  hint: {\n    textAlign: 'center',\n    fontSize: '30px'\n  }\n})\nconst DisplayDetail = (props: any) => {\n  const { language, chinaData } = props;\n  const classes = useStyle();\n  interface DataStructure {\n    'locationId': number\n    'continentName': string\n    'continentEnglishName': string\n    'countryName': string\n    'countryEnglishName': string\n    'provinceName': string\n    'provinceShortName': string\n    'provinceEnglishName': string\n    'currentConfirmedCount': number\n    'confirmedCount': number\n    'suspectedCount': number\n    'curedCount': number\n    'deadCount': number\n    'cities': object[]\n    'comment': string\n    'updateTime': number\n  }\n  const ChineseLabels = [\n    '位置编号',\n    '所属大洲名称',\n    '所属大洲英文名',\n    '国家名称',\n    '国家英文名称',\n    '省份名称',\n    '省份简称',\n    '省份英文名称',\n    '当前确诊人数',\n    '累计确诊人数',\n    '疑似病例数',\n    '治愈人数',\n    '死亡人数',\n    '所包含的城市',\n    '评论',\n    '更新时间'\n  ]\n\n  const EnglishLabels = [\n    'Position number',\n    'Name of continent',\n    'English Name of continent',\n    'Country name',\n    'Country English name',\n    'Province name',\n    'Province short name',\n    'Province English name',\n    'Current confirmed count',\n    'Confirmed count',\n    'Suspected count',\n    'Cured count',\n    'Dead count',\n    'Cities',\n    'Comments',\n    'Update time'\n  ]\n\n  const provinceName = props.currentChoose;\n\n  //将时间戳转化成当前时间\n  function getTime(time: any) {\n    let date = new Date(time);\n    let Y = date.getFullYear() + '-';\n    let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n    let D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';\n    let h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n    let m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n    let s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n    return Y + M + D + h + m + s;\n  }\n\n  //过滤出来某个省的数据\n  const [temp, setTemp]: [DataStructure[] | undefined, Function] = useState();\n  useEffect(() => {\n    //因为初次渲染没有chinaData没有定义\n    if(chinaData)\n      setTemp(chinaData.filter((value:any)=>value.provinceShortName === provinceName) as DataStructure[]);\n  }, [provinceName,chinaData])\n  useEffect(() => {\n    //console.log(temp)\n  }, [temp])\n\n  return (\n    <div className={classes.root}>\n      {temp ?\n        temp[0] ? Object.keys(temp[0]).map((key: string, index: number) => {\n          if (key !== 'cities' && key !== 'cityName' && key !== \"locationId\" && key !== 'comment' && key !== \"updateTime\") {\n            return <span key={key}>\n              <p>{(language?ChineseLabels[index]:EnglishLabels[index]) + ' : '}</p>\n              <p>{temp ? (temp[0] as any)[key] : ''}</p>\n            </span>\n          }\n          else {\n            if (key === \"updateTime\")\n              return <span key={key}>\n                <p>{(language?ChineseLabels[index]:EnglishLabels[index]) + ' : '}</p>\n                <p>{temp ? getTime((temp[0] as any)[key]) : ''}</p>\n              </span>\n                ;\n            else\n              return undefined\n          }\n\n        }\n        )\n          :\n          // 选出来的如果是非法值\n          <p className={classes.hint}>{language ? '点击各省可以查看该省的详细情况' : 'Click on the province to see the details of the province'}</p>\n        :\n        // 没有选\n        <p>{language ? '点击各省可以查看该省的详细情况' : 'Click on the province to see the details of the province'}</p>\n      }\n    </div>\n  )\n}\nexport default DisplayDetail","import React from 'react'\nimport { useEffect } from 'react'\nimport red from '@material-ui/core/colors/red';\nimport raphael from 'raphael';\n// import chinaMap from '../../../assets/chinamapData';\n// import areaData from '../../../assets/areaData';\nconst getColor = (value: number): string => {\n  if (value < 10) {\n    return red[50]\n  }\n  else {\n    if (value < 50) {\n      return red[200]\n    }\n    else {\n      if (value < 100) {\n        return red[400]\n      }\n      else {\n        if (value < 200) {\n          return red[600]\n        }\n        else {\n          return red[900]\n        }\n      }\n    }\n\n  }\n}\nconst CreateChinaMap = (props: any) => {\n  const { className, handleChange, setCurrentChoose, language, chinaData, chinaMapData } = props;\n  // const { className, handleChange, setCurrentChoose, language } = props;\n  let map: any;\n  const createChinaMap = () => {\n    //中国地图容器\n    map = raphael(\"map\", chinaMapData.dimension.width, chinaMapData.dimension.height);\n\n    //数据清洗\n    // let data: dataForm[] = areaData.results.map((el: any): {} | undefined => {\n    //   if (el.countryName === '中国'&& el.provinceShortName !== \"中国\") {\n    //     return { 省份: el.provinceShortName, province: el.provinceEnglishName, value: el.confirmedCount }\n    //   }\n    //   else\n    //     return undefined;\n    // }) as dataForm[];\n    // data = data.filter((el: any) => el !== undefined)\n    // data = data.sort((a: any, b: any) => - b.value + a.value)\n    // //console.log(chinaData)\n    let data = chinaData.map((el: any) => {\n      return { 省份: el.provinceShortName, province: el.provinceEnglishName, value: el.currentConfirmedCount }\n    })\n    chinaMapData.paths.forEach((value: any) => {\n\n      //获取当前绘制的省份数据\n      let respondValue = data.filter((el: any) => el.省份 === value.name)\n      // //console.log(respondValue)\n      //调色\n      let color: string = getColor(parseInt(respondValue[0].value));\n\n      //绘制省份图形的路径参数\n      let tempPathVal = value.cmd.map((val: any) => {\n        return val.method + ' ' + val.param.join(',');\n      }).join(' ')\n\n      //根据不同的路径分别画出一个个省份\n      let tempPath = map.path(tempPathVal).attr({\n        \"fill\": color,\n        \"cursor\": \"pointer\"\n      });\n\n      //每个省份图形的点击事件\n      tempPath.click(\n        () => {\n          handleChange();\n          setTimeout(() => {\n            setCurrentChoose(value.name);\n            handleChange();\n          }, 200)\n        }\n      )\n\n      //每个省份都添加事件来确认鼠标位置\n      tempPath.mouseover(\n        () => {\n          tempPath.attr(\"fill\", \"#fdff92\")\n        }\n      )\n\n      //每个省份都添加事件来确认鼠标位置\n      tempPath.mouseout(\n        () => {\n          tempPath.attr(\"fill\", color)\n        }\n      )\n\n\n      //得到当前绘制的省份的包围框\n      let box = tempPath.getBBox();\n\n      //写省份名称,有的有偏移,有的没有偏移\n      let text = map.text(\n        (box.x + (box.width / 2) + (value.offset ? value.offset.x : 0)),\n        (box.y + (box.height / 2) + (value.offset ? value.offset.y : 0)),\n        language ? respondValue[0].省份 : respondValue[0].province\n      ).attr(\"cursor\", \"pointer\");\n\n      //每个省份都添加事件来确认鼠标位置\n      text.mouseover(\n        () => {\n          tempPath.attr(\"fill\", \"#fdff92\")\n        }\n      )\n\n      //每个省份都添加事件来确认鼠标位置\n      text.mouseout(\n        () => {\n          tempPath.attr(\"fill\", color)\n        }\n      )\n\n      //每个省份图形的点击事件\n      text.click(\n        () => {\n          handleChange();\n          setTimeout(() => {\n            setCurrentChoose(value.name);\n            handleChange();\n          }, 200)\n        }\n      )\n    })\n  }\n  useEffect(() => {\n    // //console.log(chinaData)\n    if (chinaData && chinaMapData)\n      createChinaMap();\n    //清除地图,防止显示多个\n    return () => {\n      if (map)\n        map.remove()\n    }\n  }, [language, chinaData, chinaMapData])\n  return (\n    <div id=\"map\" className={className}>\n    </div>\n  )\n\n}\nexport default CreateChinaMap","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nconst useLabelStyle = makeStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: 'flex-start',\n      alignItems: 'center'\n    },\n    label: {\n      height: '15px',\n      width: '30px',\n      marginRight: '5px',\n      fontSize: '5px'\n    }\n  })\n  \n  \n  \n  \n  \n  function Label(props: any) {\n    const classes = useLabelStyle();\n    const { color, value} = props;\n    return (\n      <div className={classes.root}>\n        <div className={classes.label} style={{ backgroundColor: color }}></div>\n        <span>{value}</span>\n      </div>\n    )\n  }\n  export default Label","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react'\nimport ScrollReveal from 'scrollreveal'\nimport red from '@material-ui/core/colors/red';\nimport Slide from '@material-ui/core/Slide';\nimport { Paper } from '@material-ui/core';\nimport DisplayDetail from '../components/DisplayDetail'\nimport CreateChinaMap from '../components/CreateChinaMap'\nimport Label from '../components/Label'\nconst useStyles = makeStyles({\n  root: {\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  labels: {\n    marginTop: '20vh',\n    marginRight: '5vw',\n    border: 'solid 2px black',\n    borderRadius: '5px',\n    padding: '2px',\n    minWidth: '144px',\n    backgroundColor: '#e1f5fe'\n  },\n  detail: {\n    width: \"30vw\",\n    height: '80vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    padding: '4px',\n    transition: 'all 1s linear',\n    '& span': {\n      display: 'flex',\n      padding: '2px',\n      justifyContent: 'space-between',\n      height: '5vh',\n      alignItems: 'center'\n    }\n  },\n    h1: {\n        width: '100vw',\n        height: '10vh',\n        color: '#1d2228',//字体颜色\n        fontSize: '50px',\n        textAlign: 'center',\n        \n    }\n})\n\n\n\nfunction China(props: any) {\n  const { chinaData, language, chinaMapData } = props;\n  const [currentChoose, setCurrentChoose] = useState('');\n  const labels: object[] = [\n    {\n      color: red[50],\n      value: '0-10'\n    },\n    {\n      color: red[200],\n      value: '10-49'\n    },\n    {\n      color: red[400],\n      value: '50-99'\n    },\n    {\n      color: red[600],\n      value: '100-200'\n    },\n    {\n      color: red[900],\n      value: '200+'\n    }\n  ]\n  const classes = useStyles()\n  const [checked, setChecked] = useState(true);\n\n  useEffect(() => {\n    ScrollReveal().reveal(\".ChinaMap\", {\n      duration: 2000,\n      distance: '0px',\n      reset: true,\n      rotate: {\n        x: 20,\n        z: 20\n      }\n    })//入场动画\n  }, [])\n\n  return (\n    <div className={classes.root + ' ChinaMap'} >\n      <CreateChinaMap  chinaMapData={chinaMapData} language={language} chinaData={chinaData} handleChange={() => setChecked(prev => !prev)} setCurrentChoose={setCurrentChoose} />\n      <div className={classes.labels}>\n        <strong>{language ? '当前确诊人数' : 'current confirmed count'}</strong>\n        {labels.map((el: any, index: number) => <Label key={index} color={el.color} value={el.value} />)}\n      </div>\n\n      <div id=\"detail\" className={classes.detail}>\n        <Slide direction=\"left\" in={checked} mountOnEnter unmountOnExit>\n          <Paper elevation={10}>\n            <DisplayDetail chinaData={chinaData} language={language} currentChoose={currentChoose} />\n          </Paper>\n        </Slide>\n      </div>\n    </div>\n  )\n}\n\nexport default China\n","import React from 'react'\nimport { useEffect } from 'react'\nimport { Chart } from '@antv/g2'\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n    chart: {\n        height: '80vh',\n        width: '80vw',\n        color: '#1d2228',//字体颜色\n    },\n}));\nfunction Histogram(props: any) {\n    // 用于选择对比展示各省的哪一个属性\n    const { language, chinaData, displayLabel } = props;\n    const classes = useStyles();\n\n    useEffect(() => {\n\n\n        // currentConfirmedCount 今日确诊数\n        // confirmedCount 累计确诊数\n        // suspectedCount 疑似数量\n        // curedCount 治愈数\n        // deadCount 死亡数\n        if (chinaData) {\n            // let data: dataForm[] = areaData.results.map((el: any): {} | undefined => {\n            //     if (el.countryName === '中国' && el.provinceShortName !== \"中国\") {\n            //         return { 省份: el.provinceShortName, province: el.provinceEnglishName, value: el[displayLabel] > 0 ? el[displayLabel] : 0 }\n            //     }\n            //     else\n            //         return undefined;\n            // }) as dataForm[];\n            // data = data.filter((el: any) => el !== undefined)\n            // //console.log(data)\n            let data = chinaData.map((el: any) => {\n                return {\n                    省份: el.provinceShortName,\n                    province: el.provinceEnglishName,\n                    value: el[displayLabel] > 0 ? el[displayLabel] : 0\n                }\n            })\n            data = data.sort((a: any, b: any) => - b.value + a.value)\n            const chart = new Chart({\n                container: 'province',//容器姓名\n                autoFit: true,//自动适配容器宽高\n            });\n            chart.data(data);\n            chart.scale({\n                value: {\n\n                    max: data[data.length - 1].value * 1.2,// 设定横坐标最大值,因为已经排序了,所以选取最后一个\n                    min: 0,\n                    alias: language ? '单位/人' : 'people',//横坐标显示\n\n                },\n            });\n            chart.axis(language ? '省份' : 'province', {\n                title: {\n                    offset: 10,\n                    style: {\n                        fill: '#1d2228',\n                        fontSize: 18,\n                        fontWeight: 800\n                    },\n                },\n                tickLine: null,\n            });\n\n            chart.axis('value', {\n                label: null,\n                title: {\n                    offset: 5,\n                    style: {\n                        fill: '#1d2228',\n                        fontSize: 18,\n                        fontWeight: 800,\n                    },\n                },\n            });\n            chart.coordinate().transpose();//创建坐标系,并进行转置变换\n            chart\n                .interval()\n                .position((language ? '省份' : 'province') + '*value')\n                .size(18)\n                .label('value', {\n                    style: {\n                        fill: '#1d2228',\n                        fontWeight: 800\n                    },\n                    offset: 10,\n                });\n            chart.interaction('element-active');\n            setTimeout(() => chart.render(), 0)\n            return () => {\n                chart.destroy();//摧毁图表,防止多次渲染\n            }\n        }\n    }, [displayLabel, language, chinaData])\n    return (\n        <div id='province' className={classes.chart} />\n    )\n}\n\nexport default Histogram\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        border: '1px solid black',\n        borderRadius: '3px',\n        padding: '8px'\n    },\n}));\n\nfunction SelectBox(props: any) {\n    const { displayLabel, setDisplayLabel, language } = props;\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleChange = (event: any) => {\n        setDisplayLabel(event.target.value);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    return (\n        <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-controlled-open-select-label\">{language?'显示':'display'}</InputLabel>\n            <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                open={open}\n                onClose={handleClose}\n                onOpen={handleOpen}\n                value={displayLabel}\n                onChange={handleChange}\n            >\n                <MenuItem value={'currentConfirmedCount'}>{language?'当前确诊数':'current confirmed count'}</MenuItem>\n                <MenuItem value={'confirmedCount'}>{language?'累计确诊数':'confirm count'}</MenuItem>\n                <MenuItem value={'suspectedCount'}>{language?'疑似病例数':'suspected count'}</MenuItem>\n                <MenuItem value={'curedCount'}>{language?'治愈数':'cured count'}</MenuItem>\n                <MenuItem value={'deadCount'}>{language?'死亡数':'dead count'}</MenuItem>\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default SelectBox\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport ScrollReveal from 'scrollreveal'\nimport Histogram from '../components/Histogram';\n// import areaData from '../../../assets/areaData'\nimport SelectBox from '../components/SelectBox'\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '100vh',\n        width: '100vw',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    chooseInput: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    }\n}));\n\n\nfunction Province(props: any) {\n    // 用于选择对比展示各省的哪一个属性\n    const { language, chinaData } = props;\n    const [displayLabel, setDisplayLabel] = useState('confirmedCount');\n    const classes = useStyles();\n    useEffect(() => {\n\n        ScrollReveal().reveal(\".ProvinceMap\", {\n            duration: 2000,\n            rotate: {\n                x: -50,\n                z: -20\n            },\n            reset: true\n        })//入场动画\n    }, [language, chinaData, displayLabel])\n    return (\n        <div className={classes.root + ' ProvinceMap'}>\n            <h1 >{language ? '省份概览' : 'Provinces Overview'}</h1>\n            <div className={classes.chooseInput}>\n                <SelectBox displayLabel={displayLabel} language={language} setDisplayLabel={setDisplayLabel} />\n            </div>\n            <Histogram displayLabel={displayLabel} language={language} chinaData={chinaData} />\n        </div>\n    )\n}\n\nexport default Province\n","const baseURL = \"http://47.103.207.168:8080\"\n// const baseURL = 'https://lab.isaaclin.cn/nCoV/api/area'\nexport default baseURL","import baseURL from './baseURL'\n//用于获取疫情数据\nconst getData = async () => {\n    let newsData = await fetch(baseURL+'/News').then(e => e.json())\n    return newsData;\n}\nexport default getData","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport requestNews from '../../api/requestNews'\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: '100vh',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '40.25%', // 56.25%=16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction Journalism(props: any) {\r\n  const { id, setOpen } = props;\r\n  const classes = useStyles();\r\n  const [cityData, setCityData] = useState()\r\n  const [load, SetLoad] = useState(true)\r\n  const handleExpandClick = () => {\r\n    setOpen(false)\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let news = await requestNews()//news信息\r\n      setCityData([news.results[id]])\r\n      setTimeout(() => SetLoad(!load), 0);\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"ArrowBack\" onClick={() => handleExpandClick()}>\r\n            <Cancel />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            News\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {\r\n        load ?\r\n          <div style={{ display: load ? 'flex' : 'none', justifyContent: 'center' }}>\r\n            <CircularProgress size={40} thickness={6} color=\"secondary\" />\r\n          </div>\r\n          :\r\n          cityData && cityData.map((item: any, index: any) => {\r\n            return <Card className={classes.root} key={index}>\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                    N\r\n                </Avatar>\r\n                }\r\n                title={item.title}\r\n                subheader={item.infoSource}\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {item.summary}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n\r\n          })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Journalism\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport { Dialog } from '@material-ui/core';\r\nimport Jumppage from './Jumppage'\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    color: 'white',\r\n    position: 'relative',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  h1: {\r\n    width: '100vw',\r\n    height: '10vh',\r\n    color: '#1d2228',//字体颜色\r\n    fontSize: '35px',\r\n    textAlign: 'center',\r\n  },\r\n  des:{\r\n    textAlign:'left'\r\n  }\r\n})\r\n\r\nexport default function Journalism(props: any) {\r\n  const { language, newsData } = props;\r\n  const classes = useStyles();\r\n  const [list, setList] = useState();\r\n  const [id, setId] = useState();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = (index: any) => () => {\r\n    setId(index)\r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    if (newsData)\r\n      setList(newsData.map((item: any, index: any) => {\r\n        return !language && index < 5 ?\r\n          <List component=\"nav\" aria-label=\"main mailbox folders\" key={index}>\r\n            <ListItem>\r\n              <Button onClick={handleClickOpen(index)}>\r\n                <ListItemAvatar>\r\n                  <Avatar />\r\n                </ListItemAvatar>\r\n                <ListItemText classes={{secondary:classes.des}}primary={item.title} secondary={item.infoSource} />\r\n              </Button>\r\n            </ListItem>\r\n          </List>\r\n          : language && index > 4 ?\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\" key={index}>\r\n              <ListItem>\r\n                <Button onClick={handleClickOpen(index)}>\r\n                  <ListItemAvatar>\r\n                    <Avatar />\r\n                  </ListItemAvatar>\r\n                  <ListItemText classes={{secondary:classes.des}}primary={item.title} secondary={item.infoSource} />\r\n                </Button>\r\n              </ListItem>\r\n            </List>\r\n            : null\r\n      })\r\n      )\r\n  }, [newsData, language])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root} >\r\n      <h1 className={classes.h1}>{language ? '新闻概览' : 'News Overview'}</h1>\r\n      <div>{list}</div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <Jumppage id={id} setOpen={setOpen}/>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport VpnLock from '@material-ui/icons/VpnLock';\nimport People from '@material-ui/icons/People';\nimport Public from '@material-ui/icons/Public';\nimport Home from '@material-ui/icons/Home';\nimport FiberNew from '@material-ui/icons/FiberNew'\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Badge from '@material-ui/core/Badge';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'fixed',\n      bottom: '40%',\n      right: theme.spacing(2),\n      zIndex: 999\n    },\n    grouped: {\n      border: 'none',\n      margin: 0,\n    }\n  }),\n);\n\n\nexport default function DirectionButton(props: any) {\n  const { language } = props;\n  const classes = useStyles();\n\n  //下面几个状态保存的是是否浏览过该页面\n  const [worldF, setWorldF] = useState(false);\n  const [chinaF, setChinaF] = useState(false)\n  const [provinceF, setProvinceF] = useState(false);\n  const [cityF, setCityF] = useState(false);\n  const [newsF, setNewsF] = useState(false);\n  const [position, setPosition] = useState<string | null>('home');\n  const handleClick = (event: React.MouseEvent<HTMLElement>, position: string | null) => {\n    setPosition(position);\n  };\n  const [scrollPosition, setScrollPosition] = useState(0)\n  useEffect(() => {\n    //帮助用户确定滑到哪里了\n    window.addEventListener('scroll', () => {\n      setScrollPosition(window.scrollY);\n      if (window.scrollY > window.innerHeight * 0.5 && window.scrollY < window.innerHeight * 1.5)\n        setWorldF(true)\n      if (window.scrollY > window.innerHeight * 1.5 && window.scrollY < window.innerHeight * 2.5)\n        setChinaF(true)\n      if (window.scrollY > window.innerHeight * 2.5 && window.scrollY < window.innerHeight * 3.5)\n        setProvinceF(true)\n      if (window.scrollY > window.innerHeight * 3.5 && window.scrollY < window.innerHeight * 4.5)\n        setCityF(true)\n      if (window.scrollY > window.innerHeight * 4.5 && window.scrollY < window.innerHeight * 5.5)\n        setNewsF(true)\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <ToggleButtonGroup\n        classes={{ grouped: classes.grouped }}\n        value={position}\n        exclusive\n        onChange={handleClick}\n        style={{ backgroundColor: scrollPosition < window.innerHeight * 0.5 ? 'white' : 'transparent', display: 'flex', flexDirection: 'column' }}\n      >\n        <Tooltip enterDelay={1} title={language ? \"主页\" : 'Homepage'} placement=\"left\">\n          <ToggleButton value=\"home\" style={{ color: scrollPosition < window.innerHeight * 0.5 ? 'black' : 'rgba(0, 0, 0, 0.38' }} onClick={() => { window.scrollTo({ top: 0, behavior: 'smooth' }) }} >\n            <Home />\n          </ToggleButton>\n        </Tooltip>\n        <Tooltip enterDelay={1} title={language ? \"世界概况\" : \"World\"} placement=\"left\">\n          <ToggleButton value=\"earth\" style={{ color: scrollPosition > window.innerHeight * 0.5 && scrollPosition < window.innerHeight * 1.5 ? 'black' : 'rgba(0, 0, 0, 0.38' }} onClick={() => { window.scrollTo({ top: window.innerHeight, behavior: 'smooth' }) }} >\n            <Badge color=\"secondary\" invisible={worldF} badgeContent=\" \" variant=\"dot\">\n              <Public />\n            </Badge>\n          </ToggleButton>\n        </Tooltip>\n        <Tooltip enterDelay={1} title={language ? \"中国概况\" : \"China\"} placement=\"left\">\n          <ToggleButton value=\"China\" style={{ color: scrollPosition > window.innerHeight * 1.5 && scrollPosition < window.innerHeight * 2.5 ? 'black' : 'rgba(0, 0, 0, 0.38' }} onClick={() => { window.scrollTo({ top: window.innerHeight * 2, behavior: 'smooth' }) }}>\n            <Badge color=\"secondary\" invisible={chinaF} badgeContent=\" \" variant=\"dot\">\n              <VpnLock />\n            </Badge>\n          </ToggleButton>\n        </Tooltip>\n        <Tooltip enterDelay={1} title={language ? \"中国各省\" : \"Province\"} placement=\"left\">\n          <ToggleButton value=\"province\" style={{ color: scrollPosition > window.innerHeight * 2.5 && scrollPosition < window.innerHeight * 3.5 ? 'black' : 'rgba(0, 0, 0, 0.38' }} onClick={() => { window.scrollTo({ top: window.innerHeight * 3, behavior: 'smooth' }) }}>\n            <Badge color=\"secondary\" invisible={provinceF} badgeContent=\" \" variant=\"dot\">\n              <People />\n            </Badge>\n          </ToggleButton>\n        </Tooltip>\n        <Tooltip enterDelay={1} title={language ? \"中国城市/区\" : \"City\"} placement=\"left\">\n          <ToggleButton value=\"city\" style={{ color: scrollPosition > window.innerHeight * 3.5 && scrollPosition < window.innerHeight * 4.5 ? 'black' : 'rgba(0, 0, 0, 0.38' }} onClick={() => { window.scrollTo({ top: window.innerHeight * 4, behavior: 'smooth' }) }}>\n            <Badge color=\"secondary\" invisible={cityF} badgeContent=\" \" variant=\"dot\">\n              <LocationCity />\n            </Badge>\n          </ToggleButton>\n        </Tooltip>\n        <Tooltip enterDelay={1} title={language ? \"新闻\" : \"News\"} placement=\"left\">\n          <ToggleButton value=\"News\" style={{ color: scrollPosition > window.innerHeight * 4.5 && scrollPosition < window.innerHeight * 5.5 ? 'black' : 'rgba(0, 0, 0, 0.38' }} onClick={() => { window.scrollTo({ top: window.innerHeight * 5, behavior: 'smooth' }) }}>\n            <Badge color=\"secondary\" invisible={newsF} badgeContent=\" \" variant=\"dot\">\n              <FiberNew />\n            </Badge>\n          </ToggleButton>\n        </Tooltip>\n      </ToggleButtonGroup>\n    </div>\n  );\n}\n","import React, { Component } from 'react'\n\nexport default class ErrorBound extends Component<{}, { hasError: boolean }> {\n  constructor(props: any) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: any, info: any) {\n    console.log(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <div style={{ height: '100vh', width: '100vw', display: 'flex', justifyContent: \"center\", alignItems: 'center' }}>\n          <h1>Something went wrong. Please refresh the page.</h1>\n        </div>\n      )\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n    },\n  }));\nconst Loading = () => {\n    const classes = useStyles();\n  \n    return (\n      <div className={classes.root}>\n        <CircularProgress />\n      </div>\n    );\n}\nexport default Loading","import baseURL from './baseURL'\n//用于获取疫情数据\nconst getData = async () => {\n    let areaData = await fetch(baseURL+'/Hel').then(e => e.json())\n    return areaData;\n}\nexport default getData","import baseURL from './baseURL'\n//用于获取绘制地球的路径数据\nconst getData = async () => {\n    let areaData = await fetch(baseURL + '/2Dearth').then(e => e.json())\n    //console.log(areaData.result)\n    return areaData;\n}\n// export default getData\n\n// const getData = async () => {\n//     let areaData = await fetch(\n//         'https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json',\n//     ).then((d) => d.json())\n//     return areaData;\n// }\nexport default getData;","import baseURL from './baseURL'\n//用于获取绘制地球的路径数据\nconst getData = async () => {\n    let areaData = await fetch(baseURL + '/worldData').then(e => e.json())\n    //console.log(areaData.result)\n    return areaData;\n}\nexport default getData","import baseURL from './baseURL'\n// 用于获取地球填充数据\nconst getData = async () => {\n    let areaData = await fetch(baseURL + '/tsv2json').then(e => e.json())\n    //console.log(areaData.result)\n    return areaData;\n}\nexport default getData","import baseURL from './baseURL'\n//用于获取中国地图填充数据\nconst getData = async () => {\n    let areaData = await fetch(baseURL + '/chinamapData').then(e => e.json())\n    //console.log(areaData.result)\n    return areaData;\n}\nexport default getData","import React from 'react';\nimport { useState, useRef, useEffect, Suspense } from 'react'\nimport { Button, Backdrop } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport GitHubButton from 'react-github-btn'\n\nimport Memberpage from './pages/Memberpage'\nimport Homepage from './pages/Homepage'\nimport International from './pages/international/pages/International'\nimport China from './pages/China/pages/China'\nimport Province from './pages/province/pages/Province'\nimport JourNalism from './pages/News/Journalism'\n\nimport DirectionButton from './components/DirectionButton'\nimport ErrorBound from './components/ErrorBound'\nimport Loading from './components/Loading'\nimport requestAreaData from './api/requestAreaData'\nimport requestWorld2DData from './api/requestWorld2DData'\nimport requestNews from './api/requestNews'\nimport requestWorld3DData from './api/requestWorld3DData'\nimport requestWorld3DMapData from './api/requestWorld3DMapData'\nimport requestChinaMapData from './api/requestChinaMapData'\n// import VoiceHelper from './components/VoiceHelper'\n// //异步加载\nconst City = React.lazy(() => import('./pages/city/pages/City'));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    transition: 'all 1s linear',\n  },\n  gitBut: {\n    position: 'absolute',\n    top: '10px',\n    left: '10px'\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 2,\n  },\n  bdButton: {\n    position: 'fixed',\n    right: '10px',\n    top: '10px'\n  }\n}));\n\nvar pls = localStorage.getItem('language') == \"2\" ? false : true\nfunction App() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);//关于我们  这一部分的开关状态\n  const [language, setLanguage] = useState(Boolean(pls));//设定显示的语言,true为中文,false 为英语\n  const [displayText, setDisplayText] = useState(false)//设定首页的逐个文字显示\n  const [areaData, setAreaData] = useState()//世界疫情数据\n  const [chinaData, setChinaData] = useState()//疫情数据\n  const [world2D, setWorld2D] = useState()//2D世界地图数据\n  const [newsData, setNewsData] = useState([])//新闻数据\n  const [worldData, setWorldData] = useState()//3D世界地图\n  const [tsv2json, setTsv2json] = useState()//3D世界国家数据\n  const [chinaMapData, setChinaMapData] = useState()\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      let data = await requestAreaData()//请求疫情数据\n      setAreaData(data)\n\n      let tempChinaData = data.results.filter((el: any): {} | undefined => el.countryName === '中国' && el.provinceShortName !== \"中国\");\n      tempChinaData = tempChinaData.filter((el: any) => el !== undefined)\n      setChinaData(tempChinaData);\n      data = data.results.filter((el: any): {} | undefined =>\n        el.countryName === '中国' && el.provinceShortName !== \"中国\"\n      );\n      data = data.filter((el: any) => el !== undefined)\n      setChinaData(data);\n\n      data = await requestWorld2DData();//2D世界数据\n      setWorld2D(data);\n\n      data = await requestWorld3DData();\n      setWorldData(data);\n\n      data = await requestWorld3DMapData();\n      setTsv2json(data.results);\n\n      data = await requestChinaMapData();\n      setChinaMapData(data)\n\n      data = await requestNews()//news信息\n      setNewsData(data.results)\n\n      setTimeout(() => setDisplayText(true), 0)//将文字是否显示放在宏任务队列末尾\n    }\n    fetchData();\n  }, [])\n  return (\n    <div className={classes.root}>\n      <div className={classes.gitBut}>\n        <GitHubButton\n          href=\"https://github.com/HCI-AP-team/AP-coursework-front-end\"\n          data-color-scheme=\"no-preference: light; light: light; dark: dark;\"\n          data-size=\"large\"\n          data-show-count={true}\n          aria-label=\"Star HCI-AP-team/AP-coursework-front-end on GitHub\">\n          Star\n        </GitHubButton>\n      </div>\n      <DirectionButton language={language} />\n      {/* <VoiceHelper language={language} /> */}\n      <ErrorBound>\n        <Homepage setLanguage={setLanguage} language={language} displayText={displayText} />\n      </ErrorBound>\n      <ErrorBound>\n        <International language={language} tsv2json={tsv2json} worldData={worldData} world2D={world2D} areaData={areaData} />\n      </ErrorBound>\n      <ErrorBound>\n        <China chinaMapData={chinaMapData} language={language} chinaData={chinaData} />\n      </ErrorBound>\n      <ErrorBound>\n        <Province language={language} chinaData={chinaData} />\n      </ErrorBound>\n      <ErrorBound>\n        <Suspense fallback={<Loading />}>\n          <City language={language} chinaData={chinaData} />\n        </Suspense>\n      </ErrorBound>\n      <ErrorBound>\n          <JourNalism newsData={newsData} language={language} />\n      </ErrorBound>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleToggle} className={classes.bdButton}>\n        {language ? '关于我们' : 'about us'}\n      </Button>\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\n        <Memberpage language={language} />\n      </Backdrop>\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Jumppage from './pages/News/Jumppage'\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}